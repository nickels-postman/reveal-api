{
	"swagger": "2.0",
	"info": {
		"title": "Reveal API v2",
		"contact": {
			"name": "Help and Documentation portal",
			"url": "https://help.revealdata.com",
			"email":"test@test.com"
		},
		"license": {
			"name": "Copyright Â© Reveal Data 2023",
			"url": "https://www.revealdata.com/"
		},
		"version": "2"
	},
	"basePath": "/rest",
	"paths": {
		"/api/v2/{caseId}/aIBatches/models": {
			"get": {
				"tags": [
					"aIBatches"
				],
				"summary": "Get AI models",
				"operationId": "AIBatches_GetModels",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AIModel"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/aIBatches/tagProfiles": {
			"get": {
				"tags": [
					"aIBatches"
				],
				"summary": "Get tag profiles that contain the specified model",
				"operationId": "AIBatches_GetTagProfiles",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "modelId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TagProfile"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/aIBatches/queues": {
			"get": {
				"tags": [
					"aIBatches"
				],
				"summary": "Get Cosmic queues",
				"operationId": "AIBatches_GetQueues",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "modelId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CosmicQueue"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/aIBatches/queues/assign": {
			"post": {
				"tags": [
					"aIBatches"
				],
				"summary": "Start a background job to create batch for a set of docs in one of the AI queues and assign to the provided user",
				"operationId": "AIBatches_AssignQueue",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/AssignQueueRequest"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/aIBatches/statistics": {
			"get": {
				"tags": [
					"aIBatches"
				],
				"summary": "Get model statistics",
				"operationId": "AIBatches_GetModelStatistics",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "modelId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ModelStatistics"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/auditing": {
			"post": {
				"tags": [
					"auditing"
				],
				"summary": "Insert a new log",
				"operationId": "Auditing_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/Audit"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/rest/{path}": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"head": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"post": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"put": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"patch": {
				"summary": "temp summary",
				"tags": [
					"brainspace"
				],
				"operationId": "Brainspace_PassThrough",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles": {
			"get": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Get a list of field profiles",
				"operationId": "FieldProfileV2_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfFieldProfile"
						}
					}
				}
			},
			"post": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Create a new field profile",
				"operationId": "FieldProfileV2_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FieldProfileCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/FieldProfileCreate"
						}
					},
					"500": {
						"description": "Server Error"
					}
				}
			},
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Update an existing field profile",
				"operationId": "FieldProfileV2_Put",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FieldProfileUpdate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FieldProfileUpdate"
						}
					},
					"500": {
						"description": "Server Error"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/getByName/{name}": {
			"get": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Get a single field profile by name for a user",
				"operationId": "FieldProfileV2_GetByName",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"description": "",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfFieldProfile"
						}
					},
					"500": {
						"description": "Server Error"
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}": {
			"delete": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Delete an existing field profile",
				"operationId": "FieldProfileV2_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"500": {
						"description": "Server Error"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields": {
			"get": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Get the fields of a specified field profile for a user.",
				"operationId": "FieldProfileV2_GetFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "combineDateTimeFields",
						"description": "combine date/time fields into one field",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "includeSpecial",
						"description": "Specify true to retrieve special grid fields",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfManagedField"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/default": {
			"get": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Get the default fields for selection for a field profile",
				"operationId": "FieldProfileV2_GetDefaultFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfProfileFieldInclusionItem"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/add": {
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Adds fields to a field profile",
				"operationId": "FieldProfileV2_AssociateWithFields",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FieldIdVisibleAssociation"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"500": {
						"description": "Server Error"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/remove": {
			"delete": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Removes fields from a field profile",
				"operationId": "FieldProfileV2_UnAssociateWithFields",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"format": "int32",
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/defaultSortOrder": {
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Set the default field profile field sort order.",
				"operationId": "FieldProfileV2_SetDefaultFieldsSortOrder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "overwriteUserProfiles",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ManagedFieldSortOrdering"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/defaultDisplayOrder": {
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Set the default field profile field display order.",
				"operationId": "FieldProfileV2_SetDefaultFieldsDisplayOrder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "overwriteUserProfiles",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ManagedFieldDisplayOrdering"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/displayOrder": {
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Set a user's display order and visibility of fields for a specified field profile.",
				"operationId": "FieldProfileV2_SetFieldsDisplayOrder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "DisplayOrder starts at 1",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ManagedFieldDisplayOrdering"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fieldProfiles/{id}/fields/sortOrder": {
			"put": {
				"tags": [
					"fieldProfiles"
				],
				"summary": "Set a user's sort order of fields for a specified field profile.",
				"operationId": "FieldProfileV2_SetFieldsSortOrder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ManagedFieldSortOrdering"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fields": {
			"get": {
				"tags": [
					"fields"
				],
				"summary": "Get a list of all fields in IMPORT_METADATA / IMPORT_DOCUMENTS",
				"operationId": "FieldV2_GetAllFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "includeNotImportable",
						"description": "Specify true to retrieve special grid fields",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "includeSpecial",
						"description": "Specify true to retrieve special grid fields",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfField"
						}
					}
				}
			},
			"post": {
				"tags": [
					"fields"
				],
				"summary": "Create a new field",
				"operationId": "FieldV2_CreateField",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					},
					"201": {
						"description": "Created"
					}
				}
			},
			"put": {
				"tags": [
					"fields"
				],
				"summary": "Update an existing field by field name or Id in the Field object. Id is used first. If its 0, then the field name is used to lookup the field.",
				"operationId": "FieldV2_UpdateField",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fields/special": {
			"get": {
				"tags": [
					"fields"
				],
				"summary": "Get the special review grid fields.",
				"operationId": "FieldV2_GetSpecialFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "Specify to only get special fields that the user has chosen to be visible using the user's User Settings.",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfField"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fields/getByName/{name}": {
			"get": {
				"tags": [
					"fields"
				],
				"summary": "Get information about a single field by name (name as part of the path)",
				"operationId": "FieldV2_GetFieldByName",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fields/{id}": {
			"get": {
				"tags": [
					"fields"
				],
				"summary": "Get information about a single field by FIELD ID",
				"operationId": "FieldV2_GetFieldById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Field"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"fields"
				],
				"summary": "Delete a field by FIELD ID",
				"operationId": "FieldV2_DeleteField",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/fields/deleteByName/{name}": {
			"delete": {
				"tags": [
					"fields"
				],
				"summary": "Delete a field by FIELD NAME",
				"operationId": "FieldV2_DeleteFieldByName",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/filters/headers": {
			"get": {
				"tags": [
					"filters"
				],
				"summary": "Get filter headers",
				"operationId": "Filter_GetHeaderFilters",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "uniqueFolderId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/filters/{id}": {
			"get": {
				"tags": [
					"filters"
				],
				"summary": "Get filters for sidebar sub categories given the unique id of the header filter",
				"operationId": "Filter_GetSomeFilters",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "type",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueFolderId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfFolderItem"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/filters/count2": {
			"post": {
				"tags": [
					"filters"
				],
				"summary": "Get Counts for given Filters (multiple)",
				"operationId": "Filter_GetCounts3",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/FilterCountRequestDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FilterCountResults"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folder/{folderType}/{folderId}": {
			"get": {
				"tags": [
					"folder"
				],
				"summary": "Get folders.",
				"operationId": "Folder_GetFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "Type of folder to retrieve",
						"required": true
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Id of parent folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "isAdmin",
						"description": "Is an Admin user with expanded permissions",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "Pagination starting point",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "How many records to take in paginated request",
						"type": "integer",
						"format": "int32",
						"default": 25,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "GUID ID UI uses to associate folders with each other",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"folder"
				],
				"summary": "Modify a folder.  Update a folder's name and access control.  Only Work and Transcript folders are supported at this time",
				"operationId": "Folder_ModifyFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "The type of folder to modify",
						"required": true
					},
					{
						"in": "path",
						"name": "caseId",
						"description": "Case id of the folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Id of the folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "Information to update",
						"schema": {
							"$ref": "#/definitions/FolderUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"delete": {
				"tags": [
					"folder"
				],
				"summary": "Delete a folder.",
				"operationId": "Folder_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "Type of folder",
						"required": true
					},
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folder/{folderType}": {
			"post": {
				"tags": [
					"folder"
				],
				"summary": "Create a folder.  Supported folders are Work and Transcript.",
				"operationId": "Folder_CreateFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "The type of folder to be created.  Not all folder types are supported",
						"required": true
					},
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Id of the parent folder",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "Order to display the folder",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "Name of folder and who can access it",
						"schema": {
							"$ref": "#/definitions/WorkFolderCreate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folder/{folderType}/{folderId}/accesscontrol": {
			"get": {
				"tags": [
					"folder"
				],
				"summary": "Get Access control information about a folder",
				"operationId": "Folder_AccessControl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "Type of folder",
						"required": true
					},
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Id of folder",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderAccessControl"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folder/counts": {
			"post": {
				"tags": [
					"folder"
				],
				"summary": "Grabs the counts for folderItems and their children",
				"operationId": "Folder_GetFolderCounts",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "allSubFolders",
						"description": "(grab subfolders of subfolders?)",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FolderCountsQuery"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FolderDocumentCountsResultsList"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders": {
			"get": {
				"tags": [
					"folders"
				],
				"summary": "Get top level folders that can be accessed",
				"operationId": "Folders_GetFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/{folderType}/{folderId}": {
			"get": {
				"tags": [
					"folders"
				],
				"summary": "Get immediate child folders for a user",
				"operationId": "Folders_GetFoldersByType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "",
						"required": true
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userIdRequested",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"folders"
				],
				"summary": "Delete folder",
				"operationId": "Folders_DeleteFolderByType",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderType",
						"type": "string",
						"description": "",
						"required": true
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/counts": {
			"post": {
				"tags": [
					"folders"
				],
				"summary": "Grabs the counts for folderItems and their children",
				"operationId": "Folders_GetFolderCounts",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "allSubFolders",
						"description": "(grab subfolders of subfolders?)",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FolderCountsQuery"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/FolderDocumentCountsResultsList"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment/{folderId}": {
			"get": {
				"tags": [
					"folders/assignment"
				],
				"summary": "Get assignment folders",
				"operationId": "AssignmentFoldersV2_GetAssignmentFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "User to get assignment folders for",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32",
						"default": -24
					},
					{
						"in": "query",
						"name": "getWithDetails",
						"description": "Return reviewed count information",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment/id/{id}": {
			"delete": {
				"summary": "temp summary",
				"tags": [
					"folders/assignment"
				],
				"operationId": "AssignmentFoldersV2_DeleteSingle",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment": {
			"delete": {
				"summary": "temp summary",
				"tags": [
					"folders/assignment"
				],
				"operationId": "AssignmentFoldersV2_Delete",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "array",
							"items": {
								"format": "int32",
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment/batches": {
			"post": {
				"tags": [
					"folders/assignment"
				],
				"summary": "Get assignment batch folders\r\nfilters available:\r\n1) Title - IS_LIKE / IS_NOT_LIKE\r\n2) Date - GREATER_THAN_OR_EQAUL_TO / LESS_THAN_OR_EQUAL_TO\r\n3) Reviews - GREATER_THAN_OR_EQAUL_TO / LESS_THAN_OR_EQUAL_TO",
				"operationId": "AssignmentFoldersV2_Get",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "filterOption",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "Run with one filter with filterType error to run original batch call",
						"schema": {
							"$ref": "#/definitions/AssignmentBatchQuery"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfAssignmentBatchFolder"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment/batches/assign": {
			"put": {
				"tags": [
					"folders/assignment"
				],
				"summary": "Assign, unassign, or complete assignment batches in bulk",
				"operationId": "AssignmentFoldersV2_UpadateUserAssignment",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/AssignmentBatchFoldersAssignment"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/assignment/toplevel": {
			"get": {
				"tags": [
					"folders/assignment"
				],
				"summary": "Get top level assignment folders",
				"operationId": "AssignmentFoldersV2_GetTopLevelAssignmentFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "0 based first record to return",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "number of records to return",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filter",
						"description": "part of folder name",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/document/{folderId}": {
			"get": {
				"tags": [
					"folders/document"
				],
				"summary": "Get document folders",
				"operationId": "DocumentFolders_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DocumentFolder"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/document/id/{id}": {
			"delete": {
				"tags": [
					"folders/document"
				],
				"summary": "Deletes a document folder",
				"operationId": "DocumentFolders_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/imports/{folderId}": {
			"get": {
				"tags": [
					"folders/import"
				],
				"summary": "Get a list of imports in a case",
				"operationId": "ImportFoldersV2_GetFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "Specify 0 to ignore folder security for document counts",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Always 1",
						"required": true,
						"type": "integer",
						"format": "int32",
						"default": 1
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "The parent unique id",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ImportFolder"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction/{folderId}": {
			"get": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Get redaction folders",
				"operationId": "RedactionFolders_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64",
						"default": 3
					},
					{
						"in": "query",
						"name": "immediateOnly",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "getDocumentCounts",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterQuery",
						"description": "Partial folder name match",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterOperator",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userIdRequested",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction/id/{id}": {
			"delete": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Deletes a redaction folder",
				"operationId": "RedactionFolders_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"patch": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Updates a folder",
				"operationId": "RedactionFolders_ModifyFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FolderUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction/{id}/accessControl": {
			"get": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Get ACL permission data for a redaction folder",
				"operationId": "RedactionFolders_GetFolderAccessControl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderAccessControl"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction": {
			"post": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Creates a redaction folder",
				"operationId": "RedactionFolders_CreateFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "organization",
						"description": "Where we are creating the folder (leave blank if Review)",
						"type": "string",
						"default": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Which folder should be the folder's parent (2 is root)",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "1 based index to order under parent or 0-alphabetically, -1-place at end",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/WorkFolderCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/WorkFolder"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction/{id}/lock": {
			"put": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Locks or unlocks the contents in a folder",
				"operationId": "RedactionFolders_LockDownFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Folder we are updating",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "lockFolder",
						"description": "True to lock, false to unlock",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "What aspects of the folder to lock/unlock",
						"schema": {
							"$ref": "#/definitions/LockWorkFolder"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/redaction/{id}/move": {
			"patch": {
				"tags": [
					"folders/redaction"
				],
				"summary": "Move a folder.",
				"operationId": "RedactionFolders_MoveFolder",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Parent folder to move under. Must be a redaction folder. Specify 0 keeps same parent",
						"type": "integer",
						"format": "int64",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "Order under parent. Starting value is 1. 0-order alphabetically",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/savedSearch/{folderId}": {
			"get": {
				"tags": [
					"folders/savedSearch"
				],
				"summary": "Get Saved Search folders",
				"operationId": "SavedSearchFolders_GetSavedSearchFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "Requested Folders ID",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userIdRequested",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/savedSearch/all/{folderId}": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"folders/savedSearch"
				],
				"operationId": "SavedSearchFolders_GetSavedSearchFoldersAll",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/savedSearch/{id}/accessControl": {
			"get": {
				"tags": [
					"folders/savedSearch"
				],
				"summary": "Get ACL permission data for a saved search folder",
				"operationId": "SavedSearchFolders_GetFolderAccessControl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderAccessControl"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/savedSearch/id/{id}": {
			"patch": {
				"tags": [
					"folders/savedSearch"
				],
				"summary": "Update an existing saved search folder",
				"operationId": "SavedSearchFolders_UpdateFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SavedSearchFolderUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"delete": {
				"tags": [
					"folders/savedSearch"
				],
				"summary": "Delete a saved search folder",
				"operationId": "SavedSearchFolders_DeleteFolder",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/savedSearch": {
			"post": {
				"tags": [
					"folders/savedSearch"
				],
				"summary": "Create a new saved search folder",
				"operationId": "SavedSearchFolders_CreateSavedSearchFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SavedSearchFolderCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/SavedSearchFolder"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/secured/{folderId}": {
			"get": {
				"tags": [
					"folders/secured"
				],
				"summary": "Get a list of secured folders which are things like \"by user\", \"by team\" or unsecured",
				"operationId": "SecuredFoldersV2_GetFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "Specify 0 to ignore folder security for document counts",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "-2 by team, -3, by user",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "The parent unique id",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript/{folderId}": {
			"get": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Get transcript folders",
				"operationId": "TranscriptFolders_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64",
						"default": 2
					},
					{
						"in": "query",
						"name": "immediateOnly",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "getDocumentCounts",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterQuery",
						"description": "Partial folder name match",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterOperator",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userIdRequested",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderItem"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript/id/{id}": {
			"delete": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Deletes a transcript folder",
				"operationId": "TranscriptFolders_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"patch": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Updates a folder",
				"operationId": "TranscriptFolders_ModifyFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FolderUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript/{id}/accessControl": {
			"get": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Get ACL permission data for a transcript folder",
				"operationId": "TranscriptFolders_GetFolderAccessControl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderAccessControl"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript": {
			"post": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Creates a transcript folder",
				"operationId": "TranscriptFolders_CreateFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "organization",
						"description": "Where we are creating the folder (leave blank if Review)",
						"type": "string",
						"default": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Which folder should be the folder's parent (2 is root)",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "1 based index to order under parent or 0-alphabetically, -1-place at end",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/WorkFolderCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/WorkFolder"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript/{id}/lock": {
			"put": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Locks or unlocks the contents in a folder",
				"operationId": "TranscriptFolders_LockDownFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Folder we are updating",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "lockFolder",
						"description": "True to lock, false to unlock",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "What aspects of the folder to lock/unlock",
						"schema": {
							"$ref": "#/definitions/LockWorkFolder"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/transcript/{id}/move": {
			"patch": {
				"tags": [
					"folders/transcript"
				],
				"summary": "Move a folder.",
				"operationId": "TranscriptFolders_MoveFolder",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Parent folder to move under. Must be a transcript folder. Specify 0 keeps same parent",
						"type": "integer",
						"format": "int64",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "Order under parent. Starting value is 1. 0-order alphabetically",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/{folderId}": {
			"get": {
				"tags": [
					"folders/work"
				],
				"summary": "Get a list of work folders for a user in a case",
				"operationId": "WorkFoldersV2_GetFolders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "Specify 0 to ignore folder security",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "1-Root ID for public folders",
						"required": true,
						"type": "integer",
						"format": "int32",
						"default": 1
					},
					{
						"in": "query",
						"name": "immediateOnly",
						"description": "Only get folders immediate below the parent folder specified",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "getDocumentCounts",
						"description": "Return the number of documents in each folder (requires more computation)",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "uniqueId",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterQuery",
						"description": "Partial folder name match",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterOperator",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "isAdminView",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userIdRequested",
						"description": "",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/WorkFolder"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/id/{id}": {
			"patch": {
				"tags": [
					"folders/work"
				],
				"summary": "Updates a folder",
				"operationId": "WorkFoldersV2_ModifyFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/FolderUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"delete": {
				"tags": [
					"folders/work"
				],
				"summary": "Deletes a work folder",
				"operationId": "WorkFoldersV2_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work": {
			"post": {
				"tags": [
					"folders/work"
				],
				"summary": "Creates a work folder",
				"operationId": "WorkFoldersV2_CreateFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "organization",
						"description": "Where we are creating the folder (leave blank if Review)",
						"type": "string",
						"default": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Which folder should be the folder's parent",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "1 based index to order under parent or 0-alphabetically, -1-place at end",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/WorkFolderCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/WorkFolder"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/{id}/accessControl": {
			"get": {
				"tags": [
					"folders/work"
				],
				"summary": "Get ACL permission data for a work folder",
				"operationId": "WorkFoldersV2_GetFolderAccessControl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FolderAccessControl"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/{id}/docs": {
			"patch": {
				"tags": [
					"folders/work"
				],
				"summary": "Add or remove documents in a folder",
				"operationId": "WorkFoldersV2_AddDocuments",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "updateOption",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "List of documents by ITEMID",
						"schema": {
							"type": "array",
							"items": {
								"format": "int64",
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/{id}/lock": {
			"put": {
				"tags": [
					"folders/work"
				],
				"summary": "Locks or unlocks the contents in a folder",
				"operationId": "WorkFoldersV2_LockDownFolder",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Folder we are updating",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "lockFolder",
						"description": "True to lock, false to unlock",
						"type": "boolean",
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "What aspects of the folder to lock/unlock",
						"schema": {
							"$ref": "#/definitions/LockWorkFolder"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/folders/work/{id}/move": {
			"patch": {
				"tags": [
					"folders/work"
				],
				"summary": "Move a folder",
				"operationId": "WorkFoldersV2_MoveFolder",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Id for folder whose name we are changing",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "parentId",
						"description": "Parent folder to move under. Specify 0 keeps same parent",
						"type": "integer",
						"format": "int64",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "displayOrder",
						"description": "Order under parent. Starting value is 1. 0-order alphabetically",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/groups": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"groups"
				],
				"operationId": "GroupsV2_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfGroup"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/imageSets": {
			"get": {
				"tags": [
					"imageSets"
				],
				"summary": "Get a list of image sets",
				"operationId": "ImageSetV2_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfImageSet"
						}
					}
				}
			},
			"post": {
				"tags": [
					"imageSets"
				],
				"summary": "Create a new image set",
				"operationId": "ImageSetV2_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/ImageSetCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ImageSetCreate"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/imageSets/{id}": {
			"get": {
				"tags": [
					"imageSets"
				],
				"summary": "Get an image set",
				"operationId": "ImageSetV2_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ImageSet"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/imaging/formats": {
			"get": {
				"tags": [
					"imaging"
				],
				"summary": "Get imaging formats",
				"operationId": "Imaging_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfImagingFormatDTO"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/importProfiles": {
			"get": {
				"tags": [
					"importProfiles"
				],
				"summary": "Get a list of image sets",
				"operationId": "ImportProfile_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfImportProfile"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/importProfiles/{id}": {
			"get": {
				"tags": [
					"importProfiles"
				],
				"summary": "Get an image set",
				"operationId": "ImportProfile_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ImportProfile"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/{typeId}/run/{jobId}": {
			"put": {
				"tags": [
					"jobs"
				],
				"summary": "Execute an action on a job",
				"operationId": "Job_ExecuteJobAction",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "typeId",
						"type": "string",
						"description": "",
						"required": true
					},
					{
						"in": "path",
						"name": "jobId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "jobAction",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"202": {
						"description": "Accepted"
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/{typeId}/GetJobFormData": {
			"get": {
				"tags": [
					"jobs"
				],
				"summary": "Get job configuration parameters for creating a job",
				"operationId": "Job_GetJobFormDatadata",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "typeId",
						"type": "string",
						"description": "",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BulkActionForm"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/assignment": {
			"get": {
				"tags": [
					"jobs/assignment"
				],
				"summary": "Get available assignment jobs",
				"operationId": "AssignmentJobs_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfAssignmentJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/assignment"
				],
				"summary": "Create an assignment job",
				"operationId": "AssignmentJobs_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/AssignmentJobCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			},
			"patch": {
				"tags": [
					"jobs/assignment"
				],
				"summary": "Update an assignment job",
				"operationId": "AssignmentJobs_Patch",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/AssignmentJobUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/assignment/{id}": {
			"get": {
				"tags": [
					"jobs/assignment"
				],
				"summary": "Get an assignment job",
				"operationId": "AssignmentJobs_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AssignmentJob"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/assignment/{id}/run": {
			"put": {
				"tags": [
					"jobs/assignment"
				],
				"summary": "Execute an action on a job",
				"operationId": "AssignmentJobs_Run",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "jobAction",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/av-transcribe": {
			"get": {
				"tags": [
					"jobs/av-transcribe"
				],
				"summary": "Get AV transcribe jobs",
				"operationId": "AvTranscribe_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "currentUserOnly",
						"description": "Get only jobs for current user or all jobs",
						"type": "boolean",
						"default": false,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "0 based",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "deletedFlag",
						"description": "null to return all jobs. otherwise return jobs with specified deleted status",
						"type": "boolean",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfAvTranscribeJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/av-transcribe"
				],
				"summary": "Transcribe request sent to index batch server for processing",
				"operationId": "AvTranscribe_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/AvTranscribeCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/av-transcribe/{id}": {
			"get": {
				"tags": [
					"jobs/av-transcribe"
				],
				"summary": "Get single AV transcribe job",
				"operationId": "AvTranscribe_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "Job Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AvTranscribeJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/av-transcribe/languages": {
			"get": {
				"tags": [
					"jobs/av-transcribe"
				],
				"summary": "Get language Sources for transcribe job",
				"operationId": "AvTranscribe_GetLanguages",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SearchJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/bulkTag/{id}": {
			"get": {
				"tags": [
					"jobs/bulkTag"
				],
				"summary": "Get a Bulk Tag job",
				"operationId": "BulkTag_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BulkTagJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/bulkTag": {
			"get": {
				"tags": [
					"jobs/bulkTag"
				],
				"summary": "Get available bulk tag jobs",
				"operationId": "BulkTag_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfBulkTagJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/bulkTag"
				],
				"summary": "Create a bulk tag job",
				"operationId": "BulkTag_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/BulkTagJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/bulkTag/{id}/run": {
			"put": {
				"tags": [
					"jobs/bulkTag"
				],
				"summary": "Execute an action on a job",
				"operationId": "BulkTag_Run",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "jobAction",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"202": {
						"description": "Accepted"
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/deletion": {
			"get": {
				"tags": [
					"jobs/deletion"
				],
				"summary": "Get Deletion jobs",
				"operationId": "BulkDelete_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "User to get jobs for",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "0 based",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfDeletionJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/deletion"
				],
				"summary": "Create a document Deletion job",
				"operationId": "BulkDelete_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/DeletionJobCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/deletion/{id}": {
			"get": {
				"tags": [
					"jobs/deletion"
				],
				"summary": "Get a Deletion job",
				"operationId": "BulkDelete_GetJob",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "job id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/DeletionJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/export": {
			"get": {
				"tags": [
					"jobs/export"
				],
				"summary": "Get available export jobs",
				"operationId": "ExportJobs_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfExportJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/export"
				],
				"summary": "Create and run an export job",
				"operationId": "ExportJobs_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/ExportJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/export/{id}": {
			"get": {
				"tags": [
					"jobs/export"
				],
				"summary": "Get a export job",
				"operationId": "ExportJobs_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ExportJob"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"jobs/export"
				],
				"summary": "Delete a export job",
				"operationId": "ExportJobs_Delete",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/JobSubmitStatus"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/hitreport": {
			"get": {
				"tags": [
					"jobs/hitReport"
				],
				"summary": "Get all hit report job",
				"operationId": "HitReport_GetAll",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfHitReportJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/hitReport"
				],
				"summary": "Create a hit report job",
				"operationId": "HitReport_Create",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/HitReportJob"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/HitReportJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/hitreport/{id}": {
			"get": {
				"tags": [
					"jobs/hitReport"
				],
				"summary": "Get a hit report job given job id",
				"operationId": "HitReport_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/HitReportJob"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"jobs/hitReport"
				],
				"summary": "Delete a hit report job",
				"operationId": "HitReport_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/imagelabel": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"jobs/imagelabel"
				],
				"operationId": "ImageLabelJob_ProcessImageLabel",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/ImageLabelJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/ocr": {
			"get": {
				"tags": [
					"jobs/ocr"
				],
				"summary": "Get available OCR jobs",
				"operationId": "OcrJob_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfBulkOCRJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/ocr"
				],
				"summary": "Create a ocr request job",
				"operationId": "OcrJob_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/OcrJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/ocr/{id}": {
			"get": {
				"tags": [
					"jobs/ocr"
				],
				"summary": "Get a OCR job",
				"operationId": "OcrJob_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BulkOCRJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/print": {
			"get": {
				"tags": [
					"jobs/print"
				],
				"summary": "Get available print jobs",
				"operationId": "PrintJobs_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfPrintJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/print"
				],
				"summary": "Create a print job",
				"operationId": "PrintJobs_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/PrintJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/print/{id}": {
			"get": {
				"tags": [
					"jobs/print"
				],
				"summary": "Get a print job",
				"operationId": "PrintJobs_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PrintJob"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"jobs/print"
				],
				"summary": "Delete a print job",
				"operationId": "PrintJobs_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"501": {
						"description": "Server Error"
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/sample": {
			"get": {
				"tags": [
					"jobs/sample"
				],
				"summary": "Get available sample jobs",
				"operationId": "SampleJob_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfSampleJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/sample"
				],
				"summary": "Create a sample job",
				"operationId": "SampleJob_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SampleJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/sample/{id}": {
			"get": {
				"tags": [
					"jobs/sample"
				],
				"summary": "Get a sample job",
				"operationId": "SampleJob_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SampleJob"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"jobs/sample"
				],
				"summary": "Delete a sample job",
				"operationId": "SampleJob_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/search/{id}": {
			"get": {
				"tags": [
					"jobs/search"
				],
				"summary": "Get a Search Job",
				"operationId": "SearchJob_GetSearchJob",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SearchJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/search": {
			"post": {
				"tags": [
					"jobs/search"
				],
				"summary": "Saves a reference to a search, which can be reused in calls to POST /search.",
				"operationId": "SearchJob_CreateSearchAndWait",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/ISearchClause"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SearchJobResponse"
						}
					}
				},
				"deprecated": true
			}
		},
		"/api/v2/{caseId}/jobs/transcript": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"jobs/transcript"
				],
				"operationId": "TranscriptJob_ProcessTranscripts",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/TranscriptJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/translate": {
			"get": {
				"tags": [
					"jobs/translate"
				],
				"summary": "Get available Translate jobs",
				"operationId": "TranslateJob_GetList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfTranslateJob"
						}
					}
				}
			},
			"post": {
				"tags": [
					"jobs/translate"
				],
				"summary": "Bulk Translate job",
				"operationId": "TranslateJob_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/TranslateJobCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/translate/{id}": {
			"get": {
				"tags": [
					"jobs/translate"
				],
				"summary": "Get a Translate job",
				"operationId": "TranslateJob_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TranslateJob"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/unassignment": {
			"post": {
				"tags": [
					"jobs/unassignment"
				],
				"summary": "Create an unassignment job",
				"operationId": "UnassignmentJob_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/UnassignmentJobCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/CreateJobResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ProblemDetails"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/upload/client-configuration": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"jobs/upload"
				],
				"operationId": "UploadJob_GetClientConfiguration",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UploadJobClientConfiguration"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/upload": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"jobs/upload"
				],
				"operationId": "UploadJob_CreateUploadJob",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/UploadJobCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"format": "uuid",
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/jobs/upload/{id}": {
			"put": {
				"summary": "temp summary",
				"tags": [
					"jobs/upload"
				],
				"operationId": "UploadJob_UpdateUploadJob",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/UploadJobUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/upload-signature": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"jobs/upload"
				],
				"operationId": "UploadJob_GetS3Signature",
				"produces": [
					"text/plain"
				],
				"parameters": [
					{
						"in": "query",
						"name": "to_sign",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "datetime",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "canonical_request",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/login": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"login"
				],
				"operationId": "Login_Login",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/LoginRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Login"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/metadataSearchProfiles": {
			"get": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Get Metadata Search Profiles",
				"operationId": "MetadataSearchProfiles_GetSearchProfiles",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "Get profiles that a specific user has access to",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfMetadataSearchProfile"
						}
					}
				}
			},
			"post": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Create a Metadata Search Profile",
				"operationId": "MetadataSearchProfiles_CreateSearchProfile",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/MetadataSearchProfileCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/metadataSearchProfiles/{id}": {
			"get": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Get a Metadata Search Profile",
				"operationId": "MetadataSearchProfiles_GetSearchProfile",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/MetadataSearchProfile"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Delete a Metadata Search Profile",
				"operationId": "MetadataSearchProfiles_DeleteSearchProfile",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"patch": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Update a Metadata Search Profile",
				"operationId": "MetadataSearchProfiles_UpdateSearchProfile",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/MetadataSearchProfileUpdate"
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/metadataSearchProfiles/{id}/fields": {
			"get": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Get metadata fields and whether they have been selected",
				"operationId": "MetadataSearchProfiles_GetSearchProfileFields",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfProfileFieldInclusionItem"
						}
					}
				}
			},
			"put": {
				"tags": [
					"metadata-search-profiles"
				],
				"summary": "Update a Metadata Search Profile's selected fields",
				"operationId": "MetadataSearchProfiles_SetSearchProfileFields",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"format": "int32",
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/projects": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get a list of projects, with optional filtering.",
				"operationId": "ProjectsV2_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"description": "User to get cases for",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filterByExact",
						"description": "Whether a filter value must be equal to or contained.",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "projectName",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfProject"
						}
					}
				}
			}
		},
		"/api/v2/projects/{id}": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get info for a single project",
				"operationId": "ProjectsV2_GetById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Project Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "User to get project for",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Project"
						}
					}
				}
			}
		},
		"/api/v2/projects/{id}/statistics": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get statistics for a project",
				"operationId": "ProjectsV2_GetStats",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Project Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AdminStats"
						}
					}
				}
			}
		},
		"/api/v2/revealai/{path}": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughGet",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"head": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughHead",
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"post": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughPost",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"put": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughPut",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughDelete",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"patch": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughPatch",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "object"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/v2/revealai/form/{path}": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"revealai"
				],
				"operationId": "RevealAi_PassThroughPostForm",
				"consumes": [
					"multipart/form-data"
				],
				"parameters": [
					{
						"in": "path",
						"name": "path",
						"required": true,
						"type": "string"
					},
					{
						"in": "formData",
						"name": "formData",
						"type": "array"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/api/v2/{caseId}/search": {
			"post": {
				"summary": "temp summary",
				"tags": [
					"search"
				],
				"operationId": "Search_Search",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/SearchCriteria"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SearchResults"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/search/validaterql": {
			"post": {
				"tags": [
					"search"
				],
				"summary": "Validate Reveal Query Language syntax",
				"operationId": "Search_Validate",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "RQL to validate",
						"schema": {
							"$ref": "#/definitions/QueryRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ValidationResult"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/fields/{id}/searchOperators": {
			"get": {
				"tags": [
					"search"
				],
				"summary": "Get search operators for a metadata field",
				"operationId": "Search_GetSearchOperatorsForField",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SearchExpressionOperators"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/search/history/{id}": {
			"patch": {
				"tags": [
					"search/history"
				],
				"summary": "Update Search History",
				"operationId": "SearchHistory_UpdateSearchHistory",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/search/history": {
			"post": {
				"tags": [
					"search/history"
				],
				"summary": "Update Search History",
				"operationId": "SearchHistory_UpdateSearchHistoryQuery",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SearchHistoryCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"format": "int64",
							"type": "integer"
						}
					}
				}
			},
			"get": {
				"tags": [
					"search/history"
				],
				"summary": "Get Searches From History",
				"operationId": "SearchHistory_GetSearcHistory",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 20,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedListOfHistorySearch"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/search/saved": {
			"get": {
				"tags": [
					"search/saved"
				],
				"summary": "Get Saved Searches",
				"operationId": "SavedSearch_GetSavedSearches",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "query",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "folderId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "type",
						"type": "string",
						"description": "",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "sortByAsc",
						"description": "",
						"type": "boolean",
						"default": true,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 10,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfSavedSearch"
						}
					}
				}
			},
			"post": {
				"tags": [
					"search/saved"
				],
				"summary": "Create a Saved Search and optionally run it.",
				"operationId": "SavedSearch_SaveSearch",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SavedSearchCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/SearchJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/search/saved/id/{id}": {
			"put": {
				"tags": [
					"search/saved"
				],
				"summary": "Update a Saved Search and optionally run it.",
				"operationId": "SavedSearch_UpdateSavedSearch",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/SavedSearchCreate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/SearchJobResponse"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/search/saved/{folderId}": {
			"delete": {
				"tags": [
					"search/saved"
				],
				"summary": "Delete A search from a specific folder",
				"operationId": "SavedSearch_DeleteSearchFromSearchFolder",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "folderId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "search",
						"description": "",
						"type": "integer",
						"format": "int64",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/session/install/oidc": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"session"
				],
				"operationId": "Session_GetAuthSessionConfig",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/OIDCKeycloakInstallation"
						}
					}
				}
			}
		},
		"/api/v2/session/userInfo": {
			"get": {
				"tags": [
					"session"
				],
				"summary": "Get user information for the current api user.",
				"operationId": "Session_GetSessionUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "caseId",
						"description": "Specify to get project specific info",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagPanes": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"tagPanes"
				],
				"operationId": "TagPanesUserProfiles_GetAllTagPanes",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TagPaneGet"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/{profileId}/panes": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"tagPanes"
				],
				"operationId": "TagProfilePanes_GetTagPanes",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "profileId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfTagPaneGet"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/{profileId}/panes/{id}": {
			"get": {
				"summary": "temp summary",
				"tags": [
					"tagPanes"
				],
				"operationId": "TagProfilePanes_GetTagPane",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "profileId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TagPaneGet"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles": {
			"get": {
				"tags": [
					"tagProfiles"
				],
				"summary": "get a list of all tags profiles along with their tag sets and tag in a case",
				"operationId": "TagProfileV2_GetTagProfilesList",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfTagProfile"
						}
					}
				}
			},
			"post": {
				"tags": [
					"tagProfiles"
				],
				"summary": "creates a tag profile in a case",
				"operationId": "TagProfileV2_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/TagProfileCreateEdit"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/TagProfile"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"tagProfiles"
				],
				"summary": "deletes a tag profile in a case",
				"operationId": "TagProfileV2_Delete",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "name",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/new": {
			"get": {
				"tags": [
					"tagProfiles"
				],
				"summary": "get a list of all tags profiles along with their tag sets and tag in a case",
				"operationId": "TagProfileV2_GetTagProfilesList2",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfIEnumerableOfTagProfile"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/getByName/{name}": {
			"get": {
				"tags": [
					"tagProfiles"
				],
				"summary": "get a single tag profile by name",
				"operationId": "TagProfileV2_GetSingleTagProfileByName",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"description": "",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TagProfile"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/{id}": {
			"get": {
				"tags": [
					"tagProfiles"
				],
				"summary": "get a single tag profile by id",
				"operationId": "TagProfileV2_GetSingleTagProfileById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/TagProfile"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/{id}/hasPermission": {
			"post": {
				"tags": [
					"tagProfiles"
				],
				"summary": "check if the user/team have permission to the tag profile",
				"operationId": "TagProfileV2_ValidateTagProfileUserPermissionById",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/TagProfileUserPermissionValitation"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tagProfiles/AIModelId/{aiModelId}": {
			"get": {
				"tags": [
					"tagProfiles"
				],
				"summary": "get tag profiles by user ID and AI Model ID",
				"operationId": "TagProfileV2_GetTagProfilesWithModel",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "aiModelId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TagProfile"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tags/userId/{userId}": {
			"get": {
				"tags": [
					"tags"
				],
				"summary": "get Tags (Name, AI Model id) by UserId",
				"operationId": "TagV2_GetAIModelTagsByUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AIModelTag"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tags/aiModelId/{aiModelId}": {
			"get": {
				"tags": [
					"tags"
				],
				"summary": "get all tags for an AI Model (Cosmic Model)",
				"operationId": "TagV2_GetRevealAITags",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "aiModelId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AIModelTagSet"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/tags/count": {
			"post": {
				"tags": [
					"tags"
				],
				"summary": "get doc count for list of tags",
				"operationId": "TagV2_GetTagDocCount",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/TagCountQuery"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/AggregationSearchResults"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/teams": {
			"get": {
				"tags": [
					"teams"
				],
				"summary": "get all teams, filter by user",
				"operationId": "TeamV2_GetTeams",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfTeam"
						}
					}
				}
			},
			"post": {
				"tags": [
					"teams"
				],
				"summary": "creates a team",
				"operationId": "TeamV2_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/TeamCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/Team"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/teams/getByName/{name}": {
			"get": {
				"tags": [
					"teams"
				],
				"summary": "get a single team using team name without restricting to a user",
				"operationId": "TeamV2_GetTeamByName",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"description": "",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "userId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Team"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/teams/{id}": {
			"get": {
				"tags": [
					"teams"
				],
				"summary": "get a single team using team id without restricting to a user",
				"operationId": "TeamV2_GetTeamById",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Team"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"teams"
				],
				"summary": "delete a team using team id",
				"operationId": "TeamV2_DeleteById",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/teams/deleteByName/{name}": {
			"delete": {
				"tags": [
					"teams"
				],
				"summary": "delete a team using team name",
				"operationId": "TeamV2_DeleteByName",
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "name",
						"description": "",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/teams/{id}/members": {
			"get": {
				"tags": [
					"teams"
				],
				"summary": "Get team members",
				"operationId": "TeamV2_GetMembers",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/Team"
						}
					}
				}
			},
			"patch": {
				"tags": [
					"teams"
				],
				"summary": "Sets and removes members of a team",
				"operationId": "TeamV2_SetMembers",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "body",
						"description": "false: remove user, true: add user",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MemberStatus"
							}
						}
					}
				],
				"responses": {
					"501": {
						"description": "Server Error"
					}
				}
			}
		},
		"/api/v2/{caseId}/textSets": {
			"get": {
				"tags": [
					"textSets"
				],
				"summary": "Get all text sets in the case",
				"operationId": "DocumentTextSets_Get",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfDocumentTextSet2"
						}
					}
				}
			},
			"post": {
				"tags": [
					"textSets"
				],
				"summary": "Create a new Document Text Set (original version, requires full info)",
				"operationId": "DocumentTextSets_CreateTextSet",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"$ref": "#/definitions/DocumentTextSetCreate"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/DocumentTextSet"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/textSets/createformdata": {
			"get": {
				"tags": [
					"textSets"
				],
				"summary": "Get form data to create a text set for ocr, transcribe, and translate jobs",
				"operationId": "DocumentTextSets_GetCreateTextSetFormData",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/BulkActionForm"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/user/{userId}/settings": {
			"put": {
				"tags": [
					"user/settings"
				],
				"summary": "Save or update specified user settings",
				"operationId": "UserSettings_SaveSettings",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserSetting"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			},
			"get": {
				"tags": [
					"user/settings"
				],
				"summary": "Get all or specified user settings",
				"operationId": "UserSettings_GetSettings",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "userSettings",
						"type": "array",	
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "start",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedOfListOfUserSetting"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/user/{userId}/settings/{id}": {
			"get": {
				"tags": [
					"user/settings"
				],
				"summary": "Get a user setting by id",
				"operationId": "UserSettings_GetSetting",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserSetting"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/user/{userId}/settings/formData": {
			"get": {
				"tags": [
					"user/settings"
				],
				"summary": "Get a User Settings Form Data",
				"operationId": "UserSettings_FormData",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/UserSettingsForm"
						}
					}
				}
			}
		},
		"/api/v2/users": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get all users",
				"operationId": "UsersV2_GetAll",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "start",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedListOfUser"
						}
					}
				}
			},
			"post": {
				"tags": [
					"users"
				],
				"summary": "Create a new user",
				"operationId": "UsersV2_Post",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "User object",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			},
			"put": {
				"tags": [
					"users"
				],
				"summary": "Update an existing user",
				"operationId": "UsersV2_Put",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			}
		},
		"/api/v2/users/{id}": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get information about a particular user",
				"operationId": "UsersV2_GetUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "User Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users/{id}": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get information about a particular user with case specific info like groups",
				"operationId": "UsersV2_GetUserByProject",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "id",
						"description": "User Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get a list of all users assigned to a case",
				"operationId": "UsersV2_GetUsersByProject",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "filter",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedListOfUser"
						}
					}
				}
			}
		},
		"/api/v2/users/{id}/enable": {
			"put": {
				"tags": [
					"users"
				],
				"summary": "Enable or disable a user",
				"operationId": "UsersV2_Enable",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "enable",
						"description": "",
						"type": "boolean",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				}
			}
		},
		"/api/v2/{caseId}/users/{userId}/groups": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get the groups for a user in a case. A user is only allowed to be in one group in a case by design.",
				"operationId": "UsersV2_GetGroups",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "filter",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Group"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users/{userId}/permissions": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get the permissions for a user in a project.",
				"operationId": "UsersV2_GetPermissions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Permission"
							}
						}
					}
				}
			}
		},
		"/api/v2/permissions": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Get the permissions for a user in projects.",
				"operationId": "UsersV2_GetPermissionsV2",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"format": "int32",
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProjectPermissions"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/permissions": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get all permissions for a project",
				"operationId": "UsersV2_GetAllPermissions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Permission"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users/{userId}/teams": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "get teams for a particular user",
				"operationId": "UsersV2_GetTeams",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "path",
						"name": "userId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "filter",
						"description": "",
						"type": "string",
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Team"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users/getAllowedJobTypes": {
			"get": {
				"tags": [
					"users"
				],
				"summary": "Get allowed job types",
				"operationId": "UsersV2_GetAllowedJobtypes",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/JobType"
							}
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/users/teams": {
			"post": {
				"tags": [
					"users"
				],
				"summary": "Get all users assigned to a case with a list of the teams they are on",
				"operationId": "UsersV2_GetUsersByProjectWithTeams",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "Case Id",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "start",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "count",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 2147483647,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserWithTeamQuery"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/PaginatedListOfUserWithTeams"
						}
					}
				}
			}
		},
		"/api/v2/version/CurrentReviewHash": {
			"get": {
				"summary": "sample summary",
				"tags": [
					"version"
				],
				"operationId": "Version_GetVersion",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/document2": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Returns a Url",
				"operationId": "ViewRoute_GetReviewDocumentViewerUrl2",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "assignmentFolderId",
						"description": "",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "The query used to retrieve the documents list",
						"schema": {
							"$ref": "#/definitions/DocumentViewerSearchCriteria"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/document": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Deprecated: Please use document2",
				"operationId": "ViewRoute_GetReviewDocumentViewerUrl",
				"consumes": [
					"application/json-patch+json",
					"application/json",
					"text/json",
					"application/*+json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "query",
						"name": "docIndex",
						"description": "The 0 based index for the selected document from the documents list",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "gridPageIndex",
						"description": "The 0 based index for the current grid page. Used to determine the current chunk",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "query",
						"name": "assignmentFolderId",
						"description": "Required only when the document is retrieved from an assignment folder",
						"type": "integer",
						"format": "int32",
						"default": 0,
						"collectionFormat": "multi"
					},
					{
						"in": "body",
						"name": "body",
						"description": "The query used to retrieve the documents list",
						"schema": {
							"$ref": "#/definitions/DocumentQuery"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				},
				"deprecated": true
			}
		},
		"/api/v2/{caseId}/view/projectAdmin": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Returns a Url",
				"operationId": "ViewRoute_GetProjectAdminUrl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/reports": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Returns the Reports Url",
				"operationId": "ViewRoute_GetReportsUrl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/jobs": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Returns the Team Documents URL",
				"operationId": "ViewRoute_GetJobsUrl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/teamDocuments": {
			"post": {
				"tags": [
					"view"
				],
				"summary": "Returns the Team Documents Url",
				"operationId": "ViewRoute_GetTeamDocumentsUrl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/api/v2/{caseId}/view/companyAdmin": {
			"get": {
				"tags": [
					"view"
				],
				"summary": "Returns the Company Admin Url",
				"operationId": "ViewRoute_GetCompanyAdminUrl",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "caseId",
						"description": "",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		}
	},
	"consumes": [
        "application/json-patch+json",
        "application/json",
        "text/json",
        "application/*+json"
    ],
    "produces": [
        "application/json"
    ],
	"definitions": {
		"AIModel": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"AIModelTag": {
			"type": "object",
			"properties": {
				"tagId": {
					"format": "int32",
					"type": "integer"
				},
				"tagName": {
					"type": "string"
				},
				"aiModelId": {
					"format": "int32",
					"type": "integer"
				},
				"prediction": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AIModelTagSet": {
			"type": "object",
			"properties": {
				"tagSetType": {
					"format": "int32",
					"type": "integer"
				},
				"tagSetName": {
					"type": "string"
				},
				"tagId": {
					"format": "int32",
					"type": "integer"
				},
				"tagName": {
					"type": "string"
				},
				"aiModelId": {
					"format": "int32",
					"type": "integer"
				},
				"prediction": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AccessControlTagProfile": {
			"type": "object",
			"properties": {
				"type": {
					"format": "int32",
					"type": "integer"
				},
				"value": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AccessControlWorkFolder": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/FolderPermissionType"
				},
				"value": {
					"format": "int32",
					"type": "integer"
				},
				"readOnly": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"ActionPermissions": {
			"type": "object",
			"properties": {
				"add": {
					"type": "boolean"
				},
				"reName": {
					"type": "boolean"
				},
				"modifyWithACL": {
					"type": "boolean"
				},
				"delete": {
					"type": "boolean"
				},
				"viewContents": {
					"type": "boolean"
				},
				"lockDownContents": {
					"type": "boolean"
				},
				"manageBatches": {
					"type": "boolean"
				},
				"manageBatchesAdmin": {
					"type": "boolean"
				},
				"processTranscripts": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"AdminStats": {
			"type": "object",
			"properties": {
				"nativeCount": {
					"format": "int64",
					"type": "integer"
				},
				"imageCount": {
					"format": "int64",
					"type": "integer"
				},
				"nativeSize": {
					"format": "double",
					"type": "number"
				},
				"imagesSize": {
					"format": "double",
					"type": "number"
				},
				"documentsSize": {
					"format": "double",
					"type": "number"
				},
				"databaseSize": {
					"format": "double",
					"type": "number"
				},
				"productionSize": {
					"format": "double",
					"type": "number"
				},
				"productionImageCount": {
					"format": "int64",
					"type": "integer"
				},
				"indexSize": {
					"format": "double",
					"type": "number"
				},
				"userCount": {
					"format": "int64",
					"type": "integer"
				},
				"loggedInUserCount": {
					"format": "int64",
					"type": "integer"
				},
				"nativeErrorCount": {
					"format": "int64",
					"type": "integer"
				},
				"imageErrorCount": {
					"format": "int64",
					"type": "integer"
				},
				"productionImageErrorCount": {
					"format": "int64",
					"type": "integer"
				},
				"endDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"startDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"createdBy": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"lastModifiedBy": {
					"format": "int32",
					"type": "integer"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"allowPrivateNotes": {
					"type": "boolean"
				},
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"objectVersionNo": {
					"format": "int32",
					"type": "integer"
				},
				"isValidated": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"AdvancedBooleanOperationType": {
			"enum": [
				"And",
				"Or"
			],
			"type": "string"
		},
		"AdvancedBooleanSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"clauses": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ISearchClause"
							}
						},
						"operations": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/AdvancedBooleanOperationType"
							}
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"AggregationCriteria": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"componentKey": {
					"type": "string"
				},
				"excludedFieldValues": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"includedFieldValues": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"includePrefixes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"sortByValue": {
					"type": "boolean"
				},
				"sortAscending": {
					"type": "boolean"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AggregationSearchResult": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"fieldName": {
					"type": "string"
				},
				"componentKey": {
					"type": "string"
				},
				"buckets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Bucket"
					}
				},
				"totalResults": {
					"format": "int32",
					"type": "integer"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AggregationSearchResults": {
			"type": "object",
			"properties": {
				"tracingId": {
					"type": "string"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AggregationSearchResult"
					}
				}
			},
			"additionalProperties": false
		},
		"AllDocumentsSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"AnnotationType": {
			"enum": [
				"Highlight",
				"Freehand",
				"Text",
				"StickyNote"
			],
			"type": "string"
		},
		"AssignQueueRequest": {
			"type": "object",
			"properties": {
				"userId": {
					"format": "int32",
					"type": "integer"
				},
				"modelId": {
					"format": "int32",
					"type": "integer"
				},
				"trainingQueueId": {
					"format": "int64",
					"type": "integer"
				},
				"trainingQueueName": {
					"type": "string"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AssignToType": {
			"enum": [
				"Pool",
				"Users",
				"Team"
			],
			"type": "string"
		},
		"AssignmentAction": {
			"enum": [
				"Complete",
				"Assign",
				"Unassign"
			],
			"type": "string"
		},
		"AssignmentBatchControlStatusType": {
			"enum": [
				"Assigned",
				"Available",
				"CheckedOut",
				"Complete"
			],
			"type": "string"
		},
		"AssignmentBatchControlStatusTypeFilter": {
			"enum": [
				"All",
				"Available",
				"CheckedOut",
				"Complete"
			],
			"type": "string"
		},
		"AssignmentBatchFilter": {
			"type": "object",
			"properties": {
				"filterType": {
					"$ref": "#/definitions/AssignmentBatchFilterType"
				},
				"query": {
					"type": "string"
				},
				"operator": {
					"$ref": "#/definitions/SearchExpressionOperators"
				}
			},
			"additionalProperties": false
		},
		"AssignmentBatchFilterType": {
			"enum": [
				"Error",
				"Title",
				"Date",
				"Review",
				"User",
				"Status",
				"Type",
				"Tag",
				"CreatedDate",
				"None"
			],
			"type": "string"
		},
		"AssignmentBatchFolder": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"type": {
					"type": "string"
				},
				"tag": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/AssignmentBatchControlStatusType"
				},
				"checkedOutByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"checkedOutByUserName": {
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"lastActionDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"reviewedCount": {
					"format": "int32",
					"type": "integer"
				},
				"markedBatchCompleteByUserName": {
					"type": "string"
				},
				"isBatchComplete": {
					"type": "boolean"
				},
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"AssignmentBatchFoldersAssignment": {
			"type": "object",
			"properties": {
				"folderIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"assignmentAction": {
					"$ref": "#/definitions/AssignmentAction"
				},
				"assignedUserId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AssignmentBatchQuery": {
			"type": "object",
			"properties": {
				"filter": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AssignmentBatchFilter"
					}
				},
				"sortType": {
					"$ref": "#/definitions/AssignmentBatchSortType"
				}
			},
			"additionalProperties": false
		},
		"AssignmentBatchSortType": {
			"type": "object",
			"properties": {
				"sortBy": {
					"$ref": "#/definitions/AssignmentBatchFilterType"
				},
				"sortByOrder": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"AssignmentJob": {
			"type": "object",
			"properties": {
				"assignmentType": {
					"$ref": "#/definitions/AssignmentTypeID"
				},
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"sourceDescription": {
					"type": "string"
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"createdDate": {
					"format": "date-time",
					"type": "string"
				},
				"isAssignedToPool": {
					"type": "boolean"
				},
				"assignedFolderIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"folderDescription": {
					"type": "string"
				},
				"documentsPerUserCount": {
					"format": "int32",
					"type": "integer"
				},
				"modifiedByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"modifiedDate": {
					"format": "date-time",
					"type": "string"
				},
				"aiModelId": {
					"format": "int32",
					"type": "integer"
				},
				"aiQueueId": {
					"format": "int32",
					"type": "integer"
				},
				"aiQueueName": {
					"type": "string"
				},
				"searchId": {
					"format": "int64",
					"type": "integer"
				},
				"userDescription": {
					"type": "string"
				},
				"isFolderNew": {
					"type": "boolean"
				},
				"folderName": {
					"type": "string"
				},
				"folderLimit": {
					"format": "int32",
					"type": "integer"
				},
				"keepRelatedTogether": {
					"type": "boolean"
				},
				"relatedType": {
					"$ref": "#/definitions/RelatedType"
				},
				"customRelationshipField": {
					"type": "string"
				},
				"limitAdditionalDocsInAFolder": {
					"type": "boolean"
				},
				"maxRelationshipDocCount": {
					"format": "int32",
					"type": "integer"
				},
				"assignedTeamId": {
					"format": "int32",
					"type": "integer"
				},
				"assignedUserIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"sortOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobSortedFieldItem"
					}
				},
				"documentSecurtyTeamId": {
					"format": "int32",
					"type": "integer"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"unlimitedOrRandom": {
					"$ref": "#/definitions/SampleType"
				},
				"sampleType": {
					"$ref": "#/definitions/RandomSampleType"
				},
				"sampleDocumentCount": {
					"format": "int32",
					"type": "integer"
				},
				"samplePercent": {
					"format": "int32",
					"type": "integer"
				},
				"sampleConfidence": {
					"format": "int32",
					"type": "integer"
				},
				"sampleMarginOfError": {
					"format": "int32",
					"type": "integer"
				},
				"savedSearchId": {
					"format": "int32",
					"type": "integer"
				},
				"searchFrequencyHours": {
					"format": "double",
					"type": "number"
				},
				"minimumToAssign": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AssignmentJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"newFolderName": {
					"type": "string"
				},
				"assignTo": {
					"$ref": "#/definitions/AssignToType"
				},
				"suppressTPWarning": {
					"type": "boolean"
				},
				"searchId": {
					"format": "int64",
					"type": "integer"
				},
				"userDescription": {
					"type": "string"
				},
				"isFolderNew": {
					"type": "boolean"
				},
				"folderName": {
					"type": "string"
				},
				"folderLimit": {
					"format": "int32",
					"type": "integer"
				},
				"keepRelatedTogether": {
					"type": "boolean"
				},
				"relatedType": {
					"$ref": "#/definitions/RelatedType"
				},
				"customRelationshipField": {
					"type": "string"
				},
				"limitAdditionalDocsInAFolder": {
					"type": "boolean"
				},
				"maxRelationshipDocCount": {
					"format": "int32",
					"type": "integer"
				},
				"assignedTeamId": {
					"format": "int32",
					"type": "integer"
				},
				"assignedUserIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"sortOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobSortedFieldItem"
					}
				},
				"documentSecurtyTeamId": {
					"format": "int32",
					"type": "integer"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"unlimitedOrRandom": {
					"$ref": "#/definitions/SampleType"
				},
				"sampleType": {
					"$ref": "#/definitions/RandomSampleType"
				},
				"sampleDocumentCount": {
					"format": "int32",
					"type": "integer"
				},
				"samplePercent": {
					"format": "int32",
					"type": "integer"
				},
				"sampleConfidence": {
					"format": "int32",
					"type": "integer"
				},
				"sampleMarginOfError": {
					"format": "int32",
					"type": "integer"
				},
				"savedSearchId": {
					"format": "int32",
					"type": "integer"
				},
				"searchFrequencyHours": {
					"format": "double",
					"type": "number"
				},
				"minimumToAssign": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AssignmentJobUpdate": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"AssignmentTypeID": {
			"enum": [
				"Assignment",
				"Reassignment",
				"Unassignment",
				"AssignmentByEmailThread",
				"ReassignmentByEmailThread",
				"UnassignmentByEmailThread",
				"SelfAssignFromPool",
				"AssignBySample",
				"DeleteFolders",
				"SelfUnAssignToPool",
				"UnassignSpecificDocs",
				"AutoAssignment",
				"AssignedFromAIQueue"
			],
			"type": "string"
		},
		"Audit": {
			"type": "object",
			"properties": {
				"userId": {
					"format": "int32",
					"type": "integer"
				},
				"type": {
					"$ref": "#/definitions/AuditingType"
				}
			},
			"additionalProperties": false
		},
		"AuditingType": {
			"enum": [
				"CaseSelection",
				"CaseExit"
			],
			"type": "string"
		},
		"AvTranscribeCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"name": {
					"type": "string"
				},
				"textSetSourceId": {
					"format": "int32",
					"type": "integer"
				},
				"textSetDestId": {
					"format": "int32",
					"type": "integer"
				},
				"languageSource": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"AvTranscribeJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"batchGuid": {
					"type": "string"
				},
				"totalDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"documentsProcessed": {
					"format": "int32",
					"type": "integer"
				},
				"processingErrors": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"endDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"textSetSourceName": {
					"type": "string"
				},
				"textSetDestName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"textSetSourceId": {
					"format": "int32",
					"type": "integer"
				},
				"textSetDestId": {
					"format": "int32",
					"type": "integer"
				},
				"languageSource": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Bucket": {
			"type": "object",
			"properties": {
				"value": {
					"type": "string"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"BulkActionForm": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/JobType"
				},
				"tabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Tab"
					}
				},
				"elements": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Element"
					}
				}
			},
			"additionalProperties": false
		},
		"BulkActionSearchCriteria": {
			"type": "object",
			"properties": {
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"BulkFieldUpdateOption": {
			"enum": [
				"None",
				"Replace",
				"Append",
				"Prepend",
				"Delete",
				"KeepExisting"
			],
			"type": "string"
		},
		"BulkFolderUpdateOption": {
			"enum": [
				"None",
				"Add",
				"Remove"
			],
			"type": "string"
		},
		"BulkNotesUpdateOption": {
			"enum": [
				"None",
				"Add",
				"Remove"
			],
			"type": "string"
		},
		"BulkOCRJob": {
			"type": "object",
			"properties": {
				"jobId": {
					"format": "int32",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				},
				"jobName": {
					"type": "string"
				},
				"documentImageSetId": {
					"format": "int32",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				},
				"generateMissingImages": {
					"type": "boolean"
				},
				"documentTextSetId": {
					"format": "int32",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				},
				"overwriteExistingText": {
					"type": "boolean"
				},
				"totalDocuments": {
					"format": "int32",
					"type": "integer",
					"minimum":0,
					"maximum":1000
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				},
				"createdDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"startDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"endDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"status": {
					"format": "int32",
					"type": "integer",
					"minimum":1,
					"maximum":10
				},
				"jobInfoMessage": {
					"type": "string"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"pageCount": {
					"format": "int32",
					"type": "integer",
					"minimum":1,
					"maximum":1000
				},
				"asposeImageId": {
					"format": "int32",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				},
				"searchId": {
					"format": "int64",
					"type": "integer",
					"minimum":1000,
					"maximum":9000
				}
			},
			"additionalProperties": false
		},
		"BulkTagEntry": {
			"type": "object",
			"properties": {
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"tagChoiceIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"updateOption": {
					"$ref": "#/definitions/BulkTagUpdateOption"
				}
			},
			"additionalProperties": false
		},
		"BulkTagJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"numberOfDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"completedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"jobInfoMessage": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"BulkTagJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"name": {
					"type": "string"
				},
				"folderDocsEntry": {
					"$ref": "#/definitions/FolderDocsEntry"
				},
				"bulkTagEntry": {
					"$ref": "#/definitions/BulkTagEntry"
				},
				"updateFieldsEntry": {
					"$ref": "#/definitions/UpdateFieldEntry"
				},
				"updateNotesEntry": {
					"$ref": "#/definitions/UpdateNotesEntry"
				},
				"secureDocumentsEntry": {
					"$ref": "#/definitions/SecureDocumentsEntry"
				}
			},
			"additionalProperties": false
		},
		"BulkTagUpdateOption": {
			"enum": [
				"None",
				"Tag",
				"UnTag"
			],
			"type": "string"
		},
		"Category": {
			"type": "object",
			"properties": {
				"tabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Tab"
					}
				},
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ClientManifestProperties": {
			"type": "object",
			"properties": {
				"clientID": {
					"format": "int32",
					"type": "integer"
				},
				"clientName": {
					"type": "string"
				},
				"companyID": {
					"format": "int32",
					"type": "integer"
				},
				"companyName": {
					"type": "string"
				},
				"projectID": {
					"type": "string"
				},
				"projectName": {
					"type": "string"
				},
				"api": {
					"type": "string"
				},
				"timezone": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"jobGUID": {
					"type": "string"
				},
				"jobPath": {
					"type": "string"
				},
				"s3Path": {
					"type": "string"
				},
				"caseID": {
					"format": "int32",
					"type": "integer"
				},
				"createdBy": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"Client_Manifest": {
			"type": "object",
			"properties": {
				"jobName": {
					"type": "string"
				},
				"custodian": {
					"type": "string"
				},
				"workflow": {
					"type": "string"
				},
				"duplicateDocuments": {
					"type": "boolean"
				},
				"reviewAPIToken": {
					"type": "string"
				},
				"clientID": {
					"format": "int32",
					"type": "integer"
				},
				"clientName": {
					"type": "string"
				},
				"companyID": {
					"format": "int32",
					"type": "integer"
				},
				"companyName": {
					"type": "string"
				},
				"projectID": {
					"type": "string"
				},
				"projectName": {
					"type": "string"
				},
				"api": {
					"type": "string"
				},
				"timezone": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"jobGUID": {
					"type": "string"
				},
				"jobPath": {
					"type": "string"
				},
				"s3Path": {
					"type": "string"
				},
				"caseID": {
					"format": "int32",
					"type": "integer"
				},
				"createdBy": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"ColorDetectionSettings": {
			"type": "object",
			"properties": {
				"noColorInfoImageFormat": {
					"$ref": "#/definitions/ImagingFormat"
				},
				"blackWhiteImageFormat": {
					"$ref": "#/definitions/ImagingFormat"
				},
				"blackWhiteSafeImageFormat": {
					"$ref": "#/definitions/ImagingFormat"
				},
				"colorImageFormat": {
					"$ref": "#/definitions/ImagingFormat"
				},
				"treatImageContainingDocsAsColor": {
					"type": "boolean"
				},
				"colorDetectionLuminanceCutoff": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"ConceptSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"concept": {
							"type": "string"
						},
						"terms": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConceptTerm"
							}
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"ConceptTerm": {
			"type": "object",
			"properties": {
				"term": {
					"type": "string"
				},
				"weight": {
					"format": "float",
					"type": "number"
				},
				"required": {
					"type": "boolean"
				},
				"excluded": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"CosmicQueue": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"reviewedPlusSkippedCount": {
					"format": "int64",
					"type": "integer"
				},
				"richness": {
					"format": "int64",
					"type": "integer"
				},
				"remaining": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"CountQueryCriteria": {
			"type": "object",
			"properties": {
				"filterReferenceId": {
					"type": "string"
				},
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"CreateJobResponse": {
			"type": "object",
			"properties": {
				"jobId": {
					"format": "int64",
					"type": "integer"
				},
				"jobSubmitStatus": {
					"$ref": "#/definitions/JobSubmitStatus"
				}
			},
			"additionalProperties": false
		},
		"DateHistogramCriteria": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"timeInterval": {
					"$ref": "#/definitions/DateHistogramTimeInterval"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DateHistogramSearchResult": {
			"type": "object",
			"properties": {
				"interval": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"fieldName": {
					"type": "string"
				},
				"componentKey": {
					"type": "string"
				},
				"buckets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Bucket"
					}
				},
				"totalResults": {
					"format": "int32",
					"type": "integer"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DateHistogramTimeInterval": {
			"enum": [
				"Auto",
				"Day",
				"Hour",
				"Minute",
				"Month",
				"Second"
			],
			"type": "string"
		},
		"DateTimeSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/RangeSearchClauseOfString"
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"DeletionJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/DeletionJobType"
				},
				"deletedJobId": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"numberOfFiles": {
					"format": "int64",
					"type": "integer"
				},
				"numberOfFilesDeleted": {
					"format": "int64",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"perCentComplete": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"endDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"numberOfErrors": {
					"format": "int64",
					"type": "integer"
				},
				"totalDocsAffected": {
					"format": "int64",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DeletionJobCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"imageSetIds": {
					"uniqueItems": true,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"textSetImportIds": {
					"uniqueItems": true,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"textSetIndexIds": {
					"uniqueItems": true,
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"deletionPresetSelection": {
					"$ref": "#/definitions/DocumentDeletionOption"
				},
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				}
			},
			"additionalProperties": false
		},
		"DeletionJobType": {
			"enum": [
				"None",
				"Print",
				"Production",
				"ProductionExport",
				"Export",
				"DocumentDeletion",
				"CaseArchive",
				"Project"
			],
			"type": "string"
		},
		"DeletionStatus": {
			"enum": [
				"None",
				"Pending",
				"InProgress",
				"Complete"
			],
			"type": "string"
		},
		"Document": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"index": {
					"format": "int32",
					"type": "integer"
				},
				"score": {
					"format": "double",
					"type": "number"
				},
				"relativeScore": {
					"format": "int64",
					"type": "integer"
				},
				"familyCount": {
					"format": "int64",
					"type": "integer"
				},
				"hitInContext": {
					"format": "int64",
					"type": "integer"
				},
				"tagChoiceSummaries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentTagChoiceSummary"
					}
				},
				"fields": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				}
			},
			"additionalProperties": false
		},
		"DocumentCriteria": {
			"type": "object",
			"properties": {
				"fieldNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"fieldProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"getFields": {
					"type": "boolean"
				},
				"getMandatoryFields": {
					"type": "boolean"
				},
				"getSpecialIconFields": {
					"type": "boolean"
				},
				"getTagInformation": {
					"type": "boolean"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DocumentDeletionOption": {
			"enum": [
				"All",
				"ArtifactsOnly",
				"Custom"
			],
			"type": "string"
		},
		"DocumentFieldsFillRateCriteria": {
			"type": "object",
			"properties": {
				"componentKey": {
					"type": "string"
				},
				"fields": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"additionalProperties": false
		},
		"DocumentFieldsFillRateResult": {
			"type": "object",
			"properties": {
				"componentKey": {
					"type": "string"
				},
				"fieldNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"fieldsExist": {
					"type": "boolean"
				},
				"percentDocsHavingFields": {
					"format": "double",
					"type": "number"
				},
				"percentDocsMissingFields": {
					"format": "double",
					"type": "number"
				},
				"totalDocsHavingFields": {
					"format": "int32",
					"type": "integer"
				},
				"totalDocsMissingFields": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DocumentFolder": {
			"type": "object",
			"properties": {
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"DocumentQuery": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 1,
					"type": "integer"
				},
				"documentLevelSecurityUser": {
					"format": "int32",
					"type": "integer"
				},
				"tagProfileId": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"getItemIdsOnly": {
					"type": "boolean"
				},
				"sort": {
					"type": "string"
				},
				"metadataFieldFilter": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetadataFieldFilter"
					}
				},
				"queryType": {
					"$ref": "#/definitions/QueryType"
				},
				"searchJobQuery": {
					"$ref": "#/definitions/SearchJobQuery"
				}
			},
			"additionalProperties": false
		},
		"DocumentSearchResults": {
			"type": "object",
			"properties": {
				"tracingId": {
					"type": "string"
				},
				"documents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Document"
					}
				},
				"totalResults": {
					"format": "int32",
					"type": "integer"
				},
				"hasErrors": {
					"type": "boolean"
				},
				"start": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DocumentSecurityOption": {
			"enum": [
				"Add",
				"Remove"
			],
			"type": "string"
		},
		"DocumentSelection": {
			"enum": [
				"All",
				"Subset",
				"AllFromSearchContext",
				"Random",
				"SavedSearch"
			],
			"type": "string"
		},
		"DocumentTagChoiceSummary": {
			"type": "object",
			"properties": {
				"tagId": {
					"format": "int32",
					"type": "integer"
				},
				"tagName": {
					"type": "string"
				},
				"tagStatus": {
					"$ref": "#/definitions/TagStatus"
				},
				"remoteName": {
					"type": "string"
				},
				"tagType": {
					"format": "int32",
					"type": "integer"
				},
				"tagPredictionScore": {
					"format": "int32",
					"type": "integer"
				},
				"choiceValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TagSummaryTagChoice"
					}
				}
			},
			"additionalProperties": false
		},
		"DocumentTextSet": {
			"type": "object",
			"properties": {
				"documentTextSetId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"indexName": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"loadFileFieldName": {
					"type": "string"
				},
				"stopWordsType": {
					"type": "string"
				},
				"analyzerType": {
					"type": "string"
				},
				"maxSizeToIndexExcel": {
					"format": "int64",
					"type": "integer"
				},
				"maxSizeToIndexMSWord": {
					"format": "int64",
					"type": "integer"
				},
				"maxSizeToIndexMSPP": {
					"format": "int64",
					"type": "integer"
				},
				"maxSizeToIndexPDF": {
					"format": "int64",
					"type": "integer"
				},
				"maxSizeToIndexOther": {
					"format": "int64",
					"type": "integer"
				},
				"otherFileTypesToLimitText": {
					"type": "string"
				},
				"descriptor": {
					"$ref": "#/definitions/TextSetDescriptor"
				},
				"graphQLTextSetId": {
					"type": "string"
				},
				"graphQLTextSetKey": {
					"type": "string"
				},
				"graphQLCaseId": {
					"type": "string"
				},
				"graphQLTemplateIndexName": {
					"type": "string"
				},
				"graphQLTemplateId": {
					"type": "string"
				},
				"graphQLTemplateRoutingKey": {
					"type": "string"
				},
				"graphQLTemplateTextField": {
					"type": "string"
				},
				"graphQLTemplateBulkIndexLines": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"DocumentTextSet2": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"loadFileFieldName": {
					"type": "string"
				},
				"analyzerType": {
					"type": "string"
				},
				"stopWordsType": {
					"type": "string"
				},
				"descriptor": {
					"$ref": "#/definitions/TextSetDescriptor"
				}
			},
			"additionalProperties": false
		},
		"DocumentTextSetCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"analyzerType": {
					"type": "string"
				},
				"createNewField": {
					"type": "boolean"
				},
				"existingLoadFileFieldName": {
					"type": "string"
				},
				"newLoadFileFieldName": {
					"type": "string"
				},
				"descriptor": {
					"$ref": "#/definitions/TextSetDescriptor"
				},
				"addFieldToProfile": {
					"type": "boolean"
				},
				"fieldProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"fieldVisibleInProfile": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"DocumentViewerSearchCriteria": {
			"type": "object",
			"properties": {
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"documentIndex": {
					"format": "int32",
					"type": "integer"
				},
				"count": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"DupType": {
			"enum": [
				"Original",
				"NearDup",
				"ExactDup",
				"Excluded"
			],
			"type": "string"
		},
		"DupTypeSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"values": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DupType"
							}
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"Element": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/ElementType"
				},
				"required": {
					"type": "boolean"
				},
				"tabId": {
					"type": "string"
				},
				"emptyText": {
					"type": "string"
				},
				"minValue": {
					"type": "object"
				},
				"maxValue": {
					"type": "object"
				},
				"defaultValue": {
					"type": "object"
				},
				"availableValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListItem"
					}
				},
				"areValuesTranslateAble": {
					"type": "boolean"
				},
				"maxLength": {
					"format": "int32",
					"type": "integer"
				},
				"showHelpText": {
					"type": "boolean"
				},
				"complementId": {
					"type": "string"
				},
				"parentId": {
					"type": "string"
				},
				"visibilityControlledBy": {
					"type": "object"
				},
				"postLabel": {
					"type": "string"
				},
				"multipleSelect": {
					"type": "object"
				},
				"displaySettings": {
					"$ref": "#/definitions/LabelPostionSettings"
				}
			},
			"additionalProperties": false
		},
		"ElementType": {
			"enum": [
				"String",
				"StringMultiLine",
				"Boolean",
				"Int32",
				"Int64",
				"Date",
				"Time",
				"DateTime",
				"DropDownList",
				"List",
				"ListMultiSelect",
				"RadioButtonList",
				"Separator",
				"WorkFolderSelector",
				"SearchFolderSelector",
				"CreateTextSet",
				"UnAssignmentTree",
				"DeletionTree",
				"AssignmentFolderSelector",
				"UsersListWithTeams",
				"SortByFieldsList",
				"ExportPrintFieldsList",
				"ExportPrintFieldsDropDownList",
				"ImageFormatList",
				"WorkTranscriptRedactionFoldersTree",
				"TagsSelector",
				"EditableFieldsGrid",
				"SortableList",
				"ColorPicker",
				"StampingPreviewer",
				"SavedSearchSelector"
			],
			"type": "string"
		},
		"ExpansionSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"expansionFields": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"clause": {
							"$ref": "#/definitions/ISearchClause"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"ExportJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfErrors": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfDocumentsProcessed": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"exportRequestDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"status": {
					"format": "int32",
					"type": "integer"
				},
				"exportJobStatusDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"fileName": {
					"type": "string"
				},
				"fileSize": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"importProfileId": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"imageSetId": {
					"format": "int32",
					"type": "integer"
				},
				"exportAs": {
					"$ref": "#/definitions/ExportJobFileType"
				},
				"includeNativeFiles": {
					"type": "boolean"
				},
				"fileNamingType": {
					"$ref": "#/definitions/ExportJobFileNamingConvention"
				},
				"volumePrefix": {
					"type": "string"
				},
				"volumeStartNumber": {
					"format": "int32",
					"maximum": 32767,
					"minimum": 1,
					"type": "integer"
				},
				"volumeNumberDigits": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 1,
					"type": "integer"
				},
				"volumeMaxSize": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 1,
					"type": "integer"
				},
				"fileNameOrder": {
					"$ref": "#/definitions/FileOrderSetting"
				},
				"nativeFileFields": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"additionalProperties": false
		},
		"ExportJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"description": "Required when DocumentSelectionType = AllFromSearchContext",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"displayOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobOrderedFieldItem"
					}
				},
				"sortOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobSortedFieldItem"
					}
				},
				"tagProfileId": {
					"format": "int32",
					"description": "Used in conjunction with InControl.RestAPI.V2.Models.Jobs.Export.ExportJobCreate.SortOrderedFields to order by document tags",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"importProfileId": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"imageSetId": {
					"format": "int32",
					"type": "integer"
				},
				"exportAs": {
					"$ref": "#/definitions/ExportJobFileType"
				},
				"includeNativeFiles": {
					"type": "boolean"
				},
				"fileNamingType": {
					"$ref": "#/definitions/ExportJobFileNamingConvention"
				},
				"volumePrefix": {
					"type": "string"
				},
				"volumeStartNumber": {
					"format": "int32",
					"maximum": 32767,
					"minimum": 1,
					"type": "integer"
				},
				"volumeNumberDigits": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 1,
					"type": "integer"
				},
				"volumeMaxSize": {
					"format": "int32",
					"maximum": 2147483647,
					"minimum": 1,
					"type": "integer"
				},
				"fileNameOrder": {
					"$ref": "#/definitions/FileOrderSetting"
				},
				"nativeFileFields": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"additionalProperties": false
		},
		"ExportJobFileNamingConvention": {
			"enum": [
				"None",
				"Begdoc",
				"Production",
				"Name"
			],
			"type": "string"
		},
		"ExportJobFileType": {
			"enum": [
				"CSV",
				"TXT"
			],
			"type": "string"
		},
		"ExportJobOrderedFieldItem": {
			"type": "object",
			"properties": {
				"order": {
					"format": "int32",
					"type": "integer"
				},
				"fieldId": {
					"format": "int32",
					"type": "integer"
				},
				"fieldName": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ExportJobSortedFieldItem": {
			"type": "object",
			"properties": {
				"ascending": {
					"type": "boolean"
				},
				"order": {
					"format": "int32",
					"type": "integer"
				},
				"fieldId": {
					"format": "int32",
					"type": "integer"
				},
				"fieldName": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Field": {
			"type": "object",
			"properties": {
				"fieldId": {
					"format": "int32",
					"type": "integer"
				},
				"fieldName": {
					"type": "string"
				},
				"displayName": {
					"type": "string"
				},
				"dataType": {
					"type": "string"
				},
				"maxLength": {
					"format": "int32",
					"type": "integer"
				},
				"dataTypeDesc": {
					"type": "string"
				},
				"isTranscriptLookup": {
					"type": "boolean"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUpdatable": {
					"type": "boolean"
				},
				"isProductionUpdatable": {
					"type": "boolean"
				},
				"isMultiValue": {
					"type": "boolean"
				},
				"isCustomField": {
					"type": "boolean"
				},
				"isImportable": {
					"type": "boolean"
				},
				"isNativeFileField": {
					"type": "boolean"
				},
				"isSortable": {
					"type": "boolean"
				},
				"isFacetable": {
					"type": "boolean"
				},
				"hasExactText": {
					"type": "boolean"
				},
				"indexed": {
					"type": "boolean"
				},
				"multiValued": {
					"type": "boolean",
					"readOnly": true
				},
				"name": {
					"type": "string",
					"readOnly": true
				},
				"pinned": {
					"type": "boolean"
				},
				"stored": {
					"type": "boolean"
				},
				"type": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"FieldBasic": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"displayName": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"FieldDataType": {
			"enum": [
				"Nvarchar",
				"Date",
				"Time",
				"DateTime",
				"Numeric",
				"Float",
				"Bit",
				"BigInt",
				"List",
				"Multi_List",
				"Int",
				"Decimal"
			],
			"type": "string"
		},
		"FieldIdVisibleAssociation": {
			"type": "object",
			"properties": {
				"fieldId": {
					"format": "int64",
					"type": "integer"
				},
				"isVisible": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"FieldProfile": {
			"type": "object",
			"properties": {
				"profileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"isDefault": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"FieldProfileCreate": {
			"type": "object",
			"properties": {
				"profileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"createdBy": {
					"format": "int32",
					"type": "integer"
				},
				"isDefault": {
					"type": "boolean"
				},
				"teams": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"FieldProfileUpdate": {
			"type": "object",
			"properties": {
				"profileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"modifiedBy": {
					"format": "int32",
					"type": "integer"
				},
				"isDefault": {
					"type": "boolean"
				},
				"teams": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"FieldUpdateVariableSet": {
			"type": "object",
			"properties": {
				"fieldId": {
					"format": "int32",
					"type": "integer"
				},
				"variables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SlipsheetVariables"
					}
				}
			},
			"additionalProperties": false
		},
		"FileOrderSetting": {
			"enum": [
				"NormalOrdering",
				"FieldNameOrdering",
				"PrefixOrdering"
			],
			"type": "string"
		},
		"Files_Manifest": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"size": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"FilterClauseRequestDTO": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/FolderItemType"
				},
				"filterReferenceId": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"FilterCountRequestDTO": {
			"type": "object",
			"properties": {
				"filterClauses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FilterClauseRequestDTO"
					}
				},
				"searchContext": {
					"$ref": "#/definitions/CountQueryCriteria"
				}
			},
			"additionalProperties": false
		},
		"FilterCountResults": {
			"type": "object",
			"properties": {
				"count": {
					"format": "int32",
					"type": "integer"
				},
				"filterReferenceId": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"FilterSortType": {
			"enum": [
				"Name",
				"CreatedByUserName"
			],
			"type": "string"
		},
		"FolderAccessControl": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/FolderPermissionType"
				},
				"value": {
					"format": "int32",
					"type": "integer"
				},
				"valueDisplayName": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"FolderCountsQuery": {
			"type": "object",
			"properties": {
				"requests": {
					"description": "Contains root folders and their types for folder counts call",
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderIdCountsRequest"
					}
				},
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"FolderDocsEntry": {
			"type": "object",
			"properties": {
				"folderIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"updateOption": {
					"$ref": "#/definitions/BulkFolderUpdateOption"
				}
			},
			"additionalProperties": false
		},
		"FolderDocumentCountsResultsList": {
			"type": "object",
			"properties": {
				"aggregations": {
					"type": "object",
					"properties": {
						"Work": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Document": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Assignment": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Transcript": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Imports": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SecuredByTeam": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SecuredByUser": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Unsecured": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Redaction": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByBatch": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByCustodian": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByJob": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByFolderIsReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByFolderIsNotReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByJobIsReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByJobIsNotReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TagProfileIsReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TagProfileIsNotReviewed": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SavedSearch": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SearchHistory": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AdminView": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SearchView": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Secured": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentLabel": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByBatchFolder": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentByReviewer": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentBatchByReviewer": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"WorkByUser": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"WorkFolderAll": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TranscriptByUser": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TranscriptAll": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"RedactionByUser": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"RedactionAll": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SavedSearchByUser": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SavedSearchAll": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"Filter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"BatchFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AnnotationFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TagFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"PrivilegedTagFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"DocumentStatusFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"OriginalFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"DeduplicationFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"CustodianFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"FormatFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"ReviewStatusFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"PeopleFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"EntitiesFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SentimentFilter": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TopLevel": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TopLevelAdmin": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"AssignmentAdmin": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"WorkAdmin": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TranscriptAdmin": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"SavedSearchAdmin": {
							"$ref": "#/definitions/AggregationSearchResult"
						},
						"TopLevelSearches": {
							"$ref": "#/definitions/AggregationSearchResult"
						}
					},
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"FolderIdCountsRequest": {
			"type": "object",
			"properties": {
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"ids": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"getSubFolders": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"FolderItem": {
			"type": "object",
			"properties": {
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"FolderItemQuery": {
			"type": "object",
			"properties": {
				"queryParams": {
					"$ref": "#/definitions/FolderItemQueryParams"
				}
			},
			"additionalProperties": false
		},
		"FolderItemQueryParams": {
			"type": "object",
			"properties": {
				"userId": {
					"format": "int32",
					"type": "integer"
				},
				"isAdminView": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"FolderItemType": {
			"enum": [
				"Work",
				"Document",
				"Assignment",
				"Transcript",
				"Imports",
				"SecuredByTeam",
				"SecuredByUser",
				"Unsecured",
				"Redaction",
				"AssignmentByBatch",
				"AssignmentByCustodian",
				"AssignmentByJob",
				"AssignmentByFolderIsReviewed",
				"AssignmentByFolderIsNotReviewed",
				"AssignmentByJobIsReviewed",
				"AssignmentByJobIsNotReviewed",
				"TagProfileIsReviewed",
				"TagProfileIsNotReviewed",
				"SavedSearch",
				"SearchHistory",
				"AdminView",
				"SearchView",
				"Secured",
				"AssignmentLabel",
				"AssignmentByBatchFolder",
				"AssignmentByReviewer",
				"AssignmentBatchByReviewer",
				"WorkByUser",
				"WorkFolderAll",
				"TranscriptByUser",
				"TranscriptAll",
				"RedactionByUser",
				"RedactionAll",
				"SavedSearchByUser",
				"SavedSearchAll",
				"Filter",
				"BatchFilter",
				"AnnotationFilter",
				"TagFilter",
				"PrivilegedTagFilter",
				"DocumentStatusFilter",
				"OriginalFilter",
				"DeduplicationFilter",
				"CustodianFilter",
				"FormatFilter",
				"ReviewStatusFilter",
				"PeopleFilter",
				"EntitiesFilter",
				"SentimentFilter",
				"TopLevel",
				"TopLevelAdmin",
				"AssignmentAdmin",
				"WorkAdmin",
				"TranscriptAdmin",
				"SavedSearchAdmin",
				"TopLevelSearches"
			],
			"type": "string"
		},
		"FolderPermissionType": {
			"enum": [
				"User",
				"Team"
			],
			"type": "string"
		},
		"FolderSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"folderType": {
							"$ref": "#/definitions/FolderSearchType"
						},
						"id": {
							"type": "string"
						},
						"includeSubFolders": {
							"type": "boolean"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"FolderSearchType": {
			"enum": [
				"Work",
				"Document",
				"AssignmentFolder",
				"Transcript",
				"Imports",
				"SecuredByTeam",
				"SecuredByUser",
				"Unsecured",
				"RedactionByUser",
				"AssignmentByBatch",
				"AssignmentByCustodian",
				"AssignmentByJob",
				"AssignmentByFolderIsReviewed",
				"AssignmentByFolderIsNotReviewed",
				"AssignmentByJobIsReviewed",
				"AssignmentByJobIsNotReviewed",
				"TagProfileIsReviewed",
				"TagProfileIsNotReviewed"
			],
			"type": "string"
		},
		"FolderUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"applyAccessToChildren": {
					"type": "boolean"
				},
				"accessControl": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccessControlWorkFolder"
					}
				}
			},
			"additionalProperties": false
		},
		"FontStyle": {
			"enum": [
				"Regular",
				"Bold",
				"Italic",
				"Underline",
				"Strikeout"
			],
			"type": "string"
		},
		"Group": {
			"type": "object",
			"properties": {
				"groupId": {
					"format": "int32",
					"type": "integer"
				},
				"groupName": {
					"type": "string"
				},
				"groupDescription": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"HasSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"fieldName": {
							"type": "string"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"HistorySearch": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"folderName": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/SearchType"
				},
				"hasDeletedFolder": {
					"type": "boolean"
				},
				"deletedFolders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SearchFolderValidator"
					}
				},
				"name": {
					"type": "string"
				},
				"folderId": {
					"format": "int64",
					"type": "integer"
				},
				"query": {
					"$ref": "#/definitions/ISearchClause"
				},
				"notes": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"HitReportJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"hitReportUrl": {
					"type": "string"
				},
				"terms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HitReportTerm"
					}
				}
			},
			"additionalProperties": false
		},
		"HitReportTerm": {
			"type": "object",
			"properties": {
				"termId": {
					"type": "string"
				},
				"term": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ISearchClause": {
			"type": "object",
			"properties": {
				"type": {
					"$ref": "#/definitions/SearchClauseType"
				}
			},
			"additionalProperties": false
		},
		"ImageLabelJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"description": "Required when DocumentSelectionType = Subset",
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"description": "Required when DocumentSelectionType = AllFromSearchContext",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"name": {
					"type": "string"
				},
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"overwriteExisting": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"ImageSet": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"isVisible": {
					"type": "boolean"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ImageSetCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"isVisible": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"ImagingFormat": {
			"enum": [
				"Unknown",
				"Tiff_BW_300DPI",
				"JPEG_Grayscale_300DPI",
				"Tiff_Grayscale_8_300DPI",
				"JPEG_Color_200DPI",
				"JPEG_Color_600DPI",
				"PNG_Grayscale_96DPI",
				"PNG_Color_96DPI",
				"Tiff_Grayscale_24_300DPI",
				"Tiff_Color_300DPI",
				"PNG_Grayscale_200DPI",
				"PNG_Color_200DPI",
				"Tiff_Grayscale_200DPI",
				"Tiff_Color_200DPI",
				"JPEG_Color_300DPI",
				"PNG_Grayscale_300DPI",
				"PNG_Color_300DPI",
				"PNG_Color_600DPI"
			],
			"type": "string"
		},
		"ImagingFormatDTO": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ImportFolder": {
			"type": "object",
			"properties": {
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"ImportProfile": {
			"required": [
				"allowEmptyTextQuote",
				"name"
			],
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"minLength": 1,
					"type": "string"
				},
				"textQuote": {
					"type": "string"
				},
				"textDelimeter": {
					"type": "string"
				},
				"multiFieldDelimiter": {
					"type": "string"
				},
				"hierarchyDelimiter": {
					"type": "string"
				},
				"blankDateStrings": {
					"type": "string"
				},
				"allowEmptyTextQuote": {
					"minLength": 1,
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"JobAction": {
			"enum": [
				"Start",
				"Rerun",
				"Stop",
				"Hide",
				"Delete"
			],
			"type": "string"
		},
		"JobStatus": {
			"enum": [
				"Created",
				"Submitted",
				"InProcess",
				"Complete",
				"Error",
				"Cancelled",
				"CancelPending",
				"Deleted",
				"Modified",
				"CompleteWithErrors",
				"Unknown"
			],
			"type": "string"
		},
		"JobSubmitStatus": {
			"enum": [
				"Ok",
				"CaseOrJobNotFound",
				"Error",
				"AlreadyAtMaxNumJobs",
				"ShutdownInProgress"
			],
			"type": "string"
		},
		"JobType": {
			"enum": [
				"None",
				"ProductionExport",
				"Archive",
				"Assignment",
				"AudioVideoTranscription",
				"BulkTag",
				"Export",
				"Sample",
				"ImageLabel",
				"Index",
				"OCR",
				"Print",
				"Translation",
				"DocumentUpload",
				"Deletion",
				"Production",
				"SecureDocuments",
				"Unassignment",
				"Search",
				"Transcript",
				"BulkImage"
			],
			"type": "string"
		},
		"KeyValuePairOfStringAndStringValues": {
			"type": "object",
			"properties": {
				"key": {
					"type": "string"
				},
				"value": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"additionalProperties": false
		},
		"LabelPosition": {
			"enum": [
				"Left",
				"Top",
				"None"
			],
			"type": "string"
		},
		"LabelPostionSettings": {
			"type": "object",
			"properties": {
				"componentLabelPosition": {
					"$ref": "#/definitions/LabelPosition"
				},
				"gridColumnNumber": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"ListItem": {
			"type": "object",
			"properties": {
				"value": {
					"type": "string"
				},
				"text": {
					"type": "string"
				},
				"visibilityControlledBy": {
					"type": "object"
				},
				"isChecked": {
					"type": "boolean"
				},
				"areValuesTranslateAble": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"LockWorkFolder": {
			"type": "object",
			"properties": {
				"fields": {
					"type": "boolean"
				},
				"notes": {
					"type": "boolean"
				},
				"annotations": {
					"type": "boolean"
				},
				"redactions": {
					"type": "boolean"
				},
				"tagSetIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"Login": {
			"type": "object",
			"properties": {
				"loginSessionId": {
					"type": "string"
				},
				"locale": {
					"type": "string"
				},
				"userId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"LoginRequest": {
			"type": "object",
			"properties": {
				"username": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ManagedField": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"dataType": {
					"$ref": "#/definitions/FieldDataType"
				},
				"displayName": {
					"type": "string"
				},
				"isVisible": {
					"type": "boolean"
				},
				"isUpdatable": {
					"type": "boolean"
				},
				"isRequired": {
					"type": "boolean"
				},
				"isSortable": {
					"type": "boolean"
				},
				"sortOrder": {
					"format": "int32",
					"type": "integer"
				},
				"isProductionUpdatable": {
					"type": "boolean"
				},
				"displayLines": {
					"format": "int32",
					"type": "integer"
				},
				"fieldLength": {
					"format": "int32",
					"type": "integer"
				},
				"isLinked": {
					"type": "boolean"
				},
				"linkedListId": {
					"format": "int32",
					"type": "integer"
				},
				"linkedDataType": {
					"type": "string"
				},
				"isLinkedListUpdatable": {
					"type": "boolean"
				},
				"fieldId": {
					"format": "int32",
					"type": "integer"
				},
				"isMultiValue": {
					"type": "boolean"
				},
				"isImportable": {
					"type": "boolean"
				},
				"isSpecial": {
					"type": "boolean"
				},
				"isSortDescending": {
					"type": "boolean"
				},
				"faceted": {
					"type": "boolean"
				},
				"hasExactText": {
					"type": "string"
				},
				"indexed": {
					"type": "boolean"
				},
				"multiValued": {
					"type": "boolean",
					"readOnly": true
				},
				"pinned": {
					"type": "boolean"
				},
				"stored": {
					"type": "boolean"
				},
				"type": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ManagedFieldDisplayOrdering": {
			"type": "object",
			"properties": {
				"isVisible": {
					"type": "boolean"
				},
				"managedFieldId": {
					"format": "int64",
					"type": "integer"
				},
				"order": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"ManagedFieldSortOrdering": {
			"type": "object",
			"properties": {
				"isDescending": {
					"type": "boolean"
				},
				"managedFieldId": {
					"format": "int64",
					"type": "integer"
				},
				"order": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"MemberStatus": {
			"type": "object",
			"properties": {
				"userId": {
					"format": "int32",
					"type": "integer"
				},
				"isAddedRemoved": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"MetadataFieldFilter": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"operator": {
					"$ref": "#/definitions/MetadataFieldFilterOperator"
				},
				"values": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"additionalProperties": false
		},
		"MetadataFieldFilterOperator": {
			"enum": [
				"EQUAL_TO",
				"NOT_EQUAL_TO",
				"GREATER_THAN",
				"GREATER_THAN_OR_EQUAL_TO",
				"LESS_THAN",
				"LESS_THAN_OR_EQUAL_TO",
				"CONTAINS",
				"DOES_NOT_CONTAIN",
				"RANGE",
				"IS_EMPTY",
				"IS_NOT_EMPTY",
				"IS_LIKE",
				"IS_NOT_LIKE",
				"HAS_ANY",
				"HAS_ALL",
				"HAS_NONE",
				"NOT_ALL",
				"HAS_ONLY",
				"STARTS_WITH",
				"DOES_NOT_START_WITH",
				"UNKNOWN"
			],
			"type": "string"
		},
		"MetadataSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"value": {
							"type": "string"
						},
						"fieldName": {
							"type": "string"
						},
						"exact": {
							"type": "boolean"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"MetadataSearchProfile": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"modifiedByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"createdDate": {
					"format": "date-time",
					"type": "string"
				},
				"modifiedDate": {
					"format": "date-time",
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"teamIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"MetadataSearchProfileCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"teamIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"MetadataSearchProfileUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"teamIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"ModelStatistics": {
			"type": "object",
			"properties": {
				"reviewedCount": {
					"format": "int32",
					"type": "integer"
				},
				"score": {
					"format": "double",
					"type": "number",
					"minimum": 0,
					"maximum": 100
				},
				"rounds": {
					"format": "int32",
					"type": "integer"
				},
				"status": {
					"type": "string"
				},
				"precision": {
					"format": "double",
					"type": "number"
				},
				"recall": {
					"format": "double",
					"type": "number"
				},
				"f1": {
					"format": "double",
					"type": "number"
				},
				"stabilityIsClickable": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"NotSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"clause": {
							"$ref": "#/definitions/ISearchClause"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"NumberHistogramBounds": {
			"type": "object",
			"properties": {
				"min": {
					"format": "float",
					"type": "number"
				},
				"max": {
					"format": "float",
					"type": "number"
				}
			},
			"additionalProperties": false
		},
		"NumberHistogramCriteria": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"interval": {
					"format": "float",
					"type": "number"
				},
				"hardBounds": {
					"$ref": "#/definitions/NumberHistogramBounds"
				},
				"extendedBounds": {
					"$ref": "#/definitions/NumberHistogramBounds"
				}
			},
			"additionalProperties": false
		},
		"NumberHistogramSearchResult": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"buckets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Bucket"
					}
				}
			},
			"additionalProperties": false
		},
		"NumericSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/RangeSearchClauseOfNullableOfDouble"
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"OIDCKeycloakInstallation": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"clientId": {
					"type": "string"
				},
				"realm": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"OcrJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"generateMissingImages": {
					"type": "boolean"
				},
				"overwriteExistingText": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int64",
					"type": "integer"
				},
				"createdDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"startDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"endDatetime": {
					"format": "date-time",
					"type": "string"
				},
				"jobInfoMessage": {
					"type": "string"
				},
				"pageCount": {
					"format": "int32",
					"type": "integer"
				},
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"documentImageSetId": {
					"format": "int32",
					"type": "integer"
				},
				"documentTextSetId": {
					"format": "int32",
					"type": "integer"
				},
				"totalDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"status": {
					"format": "int32",
					"type": "integer"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"imagingTemplateId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"PaginatedListOfHistorySearch": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HistorySearch"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedListOfUser": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/User"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedListOfUserWithTeams": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserWithTeams"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfAssignmentBatchFolder": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AssignmentBatchFolder"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfAvTranscribeJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AvTranscribeJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfBulkOCRJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer",
					"minimum":0
				},
				"count": {
					"format": "int64",
					"type": "integer",
					"minimum":0,
					"maximum":1000
				},
				"totalResults": {
					"format": "int64",
					"type": "integer",
					"minimum":0,
					"maximum":1000
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BulkOCRJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfBulkTagJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BulkTagJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfDeletionJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DeletionJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfExportJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfFolderItem": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfHitReportJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HitReportJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfMetadataSearchProfile": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetadataSearchProfile"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfPrintJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrintJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfProfileFieldInclusionItem": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProfileFieldInclusionItem"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfProject": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Project"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfSampleJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SampleJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfTagPaneGet": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TagPaneGet"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfTagProfile": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TagProfile"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfIEnumerableOfTranslateJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranslateJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfAssignmentJob": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AssignmentJob"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfDocumentTextSet2": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentTextSet2"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfField": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Field"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfFieldProfile": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FieldProfile"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfGroup": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Group"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfImageSet": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ImageSet"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfImagingFormatDTO": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ImagingFormatDTO"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfImportProfile": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ImportProfile"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfManagedField": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ManagedField"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfProfileFieldInclusionItem": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProfileFieldInclusionItem"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfSavedSearch": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SavedSearch"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfTeam": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Team"
					}
				}
			},
			"additionalProperties": false
		},
		"PaginatedOfListOfUserSetting": {
			"type": "object",
			"properties": {
				"start": {
					"format": "int64",
					"type": "integer"
				},
				"count": {
					"format": "int64",
					"type": "integer"
				},
				"totalResults": {
					"format": "int64",
					"type": "integer"
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserSetting"
					}
				}
			},
			"additionalProperties": false
		},
		"Permission": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"category": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"PrintIncludeRedactions": {
			"enum": [
				"None",
				"BurnedIn",
				"SeeThrough"
			],
			"type": "string"
		},
		"PrintJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfErrors": {
					"format": "int32",
					"type": "integer"
				},
				"numberOfDocumentsProcessed": {
					"format": "int32",
					"type": "integer"
				},
				"lastUpdatedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"endDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"jobInfoMessage": {
					"type": "string"
				},
				"pagesToPrint": {
					"format": "int32",
					"type": "integer"
				},
				"downloadFileName": {
					"type": "string"
				},
				"downloadFileSize": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"includeSlipsheet": {
					"type": "boolean"
				},
				"includeTranscriptWordList": {
					"type": "boolean"
				},
				"orientation": {
					"$ref": "#/definitions/PrintJobOrientation"
				},
				"printFormat": {
					"$ref": "#/definitions/PrintPDFFormat"
				},
				"fileNameOrder": {
					"$ref": "#/definitions/FileOrderSetting"
				},
				"imageSetId": {
					"format": "int32",
					"type": "integer"
				},
				"useOriginalImageIfMissing": {
					"type": "boolean"
				},
				"colorDetectionSettings": {
					"$ref": "#/definitions/ColorDetectionSettings"
				},
				"imagingTemplateId": {
					"format": "int32",
					"type": "integer"
				},
				"searchablePDFs": {
					"type": "boolean"
				},
				"stampingChoice": {
					"$ref": "#/definitions/StampingChoice"
				},
				"stamping": {
					"$ref": "#/definitions/StampingSpec"
				},
				"includeRedactions": {
					"$ref": "#/definitions/PrintIncludeRedactions"
				},
				"annotationsToInclude": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AnnotationType"
					}
				},
				"redactionsProfiles": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"PrintJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"description": "Required when DocumentSelectionType = Subset",
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"description": "Required when DocumentSelectionType = AllFromSearchContext",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"displayOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobOrderedFieldItem"
					}
				},
				"sortOrderedFields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExportJobSortedFieldItem"
					}
				},
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"includeSlipsheet": {
					"type": "boolean"
				},
				"includeTranscriptWordList": {
					"type": "boolean"
				},
				"orientation": {
					"$ref": "#/definitions/PrintJobOrientation"
				},
				"printFormat": {
					"$ref": "#/definitions/PrintPDFFormat"
				},
				"fileNameOrder": {
					"$ref": "#/definitions/FileOrderSetting"
				},
				"imageSetId": {
					"format": "int32",
					"type": "integer"
				},
				"useOriginalImageIfMissing": {
					"type": "boolean"
				},
				"colorDetectionSettings": {
					"$ref": "#/definitions/ColorDetectionSettings"
				},
				"imagingTemplateId": {
					"format": "int32",
					"type": "integer"
				},
				"searchablePDFs": {
					"type": "boolean"
				},
				"stampingChoice": {
					"$ref": "#/definitions/StampingChoice"
				},
				"stamping": {
					"$ref": "#/definitions/StampingSpec"
				},
				"includeRedactions": {
					"$ref": "#/definitions/PrintIncludeRedactions"
				},
				"annotationsToInclude": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AnnotationType"
					}
				},
				"redactionsProfiles": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"PrintJobOrientation": {
			"enum": [
				"Auto",
				"Portrait",
				"Landscape"
			],
			"type": "string"
		},
		"PrintPDFFormat": {
			"enum": [
				"Single",
				"Multiple",
				"Family"
			],
			"type": "string"
		},
		"ProblemDetails": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"status": {
					"format": "int32",
					"type": "integer"
				},
				"detail": {
					"type": "string"
				},
				"instance": {
					"type": "string"
				}
			},
			"additionalProperties": {
				"type": "object"
			}
		},
		"ProfileFieldInclusionItem": {
			"type": "object",
			"properties": {
				"isIncluded": {
					"type": "boolean"
				},
				"field": {
					"$ref": "#/definitions/FieldBasic"
				}
			},
			"additionalProperties": false
		},
		"Project": {
			"type": "object",
			"properties": {
				"projectId": {
					"format": "int32",
					"type": "integer"
				},
				"projectName": {
					"type": "string"
				},
				"companyId": {
					"format": "int32",
					"type": "integer"
				},
				"companyName": {
					"type": "string"
				},
				"totalNumberOfDocs": {
					"format": "int64",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"lastUpdatedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"isDocumentLevelSecurityEnabled": {
					"type": "boolean"
				},
				"deletionStatus": {
					"$ref": "#/definitions/DeletionStatus"
				},
				"timezone": {
					"type": "string"
				},
				"areStatisticsAvailable": {
					"type": "boolean"
				},
				"brainspaceDatasetIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"isIndexed": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"ProjectPermissions": {
			"type": "object",
			"properties": {
				"permissions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Permission"
					}
				},
				"caseId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"QueryRequest": {
			"type": "object",
			"properties": {
				"queryString": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"caseId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"QueryType": {
			"enum": [
				"AllDocs",
				"SearchJob"
			],
			"type": "string"
		},
		"RandomSampleType": {
			"enum": [
				"COUNT",
				"PERCENT",
				"STATISTIC"
			],
			"type": "string"
		},
		"RangeSearchClauseOfNullableOfDouble": {
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"fieldName": {
							"type": "string"
						},
						"gte": {
							"format": "double",
							"type": "number"
						},
						"gt": {
							"format": "double",
							"type": "number"
						},
						"eq": {
							"format": "double",
							"type": "number"
						},
						"lte": {
							"format": "double",
							"type": "number"
						},
						"lt": {
							"format": "double",
							"type": "number"
						},
						"item": {
							"format": "double",
							"type": "number"
						}
					}
				}
			],
			"discriminator": "type"
		},
		"RangeSearchClauseOfString": {
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"fieldName": {
							"type": "string"
						},
						"gte": {
							"type": "string"
						},
						"gt": {
							"type": "string"
						},
						"eq": {
							"type": "string"
						},
						"lte": {
							"type": "string"
						},
						"lt": {
							"type": "string"
						},
						"item": {
							"type": "string"
						}
					}
				}
			],
			"discriminator": "type"
		},
		"RangeSearchClauseOfT": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"gte": {
					"$ref": "#/definitions/T"
				},
				"gt": {
					"$ref": "#/definitions/T"
				},
				"eq": {
					"$ref": "#/definitions/T"
				},
				"lte": {
					"$ref": "#/definitions/T"
				},
				"lt": {
					"$ref": "#/definitions/T"
				},
				"type": {
					"$ref": "#/definitions/SearchClauseType"
				}
			},
			"additionalProperties": {
				"type": "object"
			}
		},
		"RegionStampSpec": {
			"type": "object",
			"properties": {
				"fieldName": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"RelatedType": {
			"enum": [
				"None",
				"KeepFamiliesTogether",
				"KeepEmailThreadsTogether",
				"KeepCustomRelationshipTogether"
			],
			"type": "string"
		},
		"ReviewedFolderSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/FolderSearchClause"
				},
				{
					"type": "object",
					"properties": {
						"folderName": {
							"type": "string"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"RqlListClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"list": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SimpleRqlSearchClause"
							}
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"S3ClientConfiguration": {
			"type": "object",
			"properties": {
				"signerUrl": {
					"type": "string"
				},
				"key": {
					"type": "string"
				},
				"region": {
					"type": "string"
				},
				"bucket": {
					"type": "string"
				},
				"sekmsKeyHeader": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"S3_Manifest": {
			"type": "object",
			"properties": {
				"job": {
					"$ref": "#/definitions/Client_Manifest"
				},
				"files": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Files_Manifest"
					}
				}
			},
			"additionalProperties": false
		},
		"SampleJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"numberOfDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"completedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"jobInfoMessage": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SampleJobCreate": {
			"type": "object",
			"properties": {
				"sampleType": {
					"$ref": "#/definitions/RandomSampleType"
				},
				"sampleDocumentCount": {
					"format": "int32",
					"type": "integer"
				},
				"samplePercent": {
					"format": "int32",
					"type": "integer"
				},
				"sampleConfidence": {
					"format": "int32",
					"type": "integer"
				},
				"sampleMarginOfError": {
					"format": "int32",
					"type": "integer"
				},
				"query": {
					"$ref": "#/definitions/DocumentQuery"
				},
				"totalQueryDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"folderId": {
					"format": "int32",
					"type": "integer"
				},
				"savedSearchFolderId": {
					"format": "int32",
					"type": "integer"
				},
				"savedSearchName": {
					"type": "string"
				},
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"name": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SampleType": {
			"enum": [
				"UNLIMITED",
				"RANDOM"
			],
			"type": "string"
		},
		"SavedSearch": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserName": {
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"folderName": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/SearchType"
				},
				"hasDeletedFolder": {
					"type": "boolean"
				},
				"deletedFolders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SearchFolderValidator"
					}
				},
				"name": {
					"type": "string"
				},
				"folderId": {
					"format": "int64",
					"type": "integer"
				},
				"query": {
					"$ref": "#/definitions/ISearchClause"
				},
				"notes": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SavedSearchCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"folderId": {
					"format": "int64",
					"type": "integer"
				},
				"query": {
					"$ref": "#/definitions/ISearchClause"
				},
				"notes": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SavedSearchFolder": {
			"type": "object",
			"properties": {
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"SavedSearchFolderCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"acLs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderAccessControl"
					}
				}
			},
			"additionalProperties": false
		},
		"SavedSearchFolderUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"applyAccessToChildren": {
					"type": "boolean"
				},
				"accessControl": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderAccessControl"
					}
				}
			},
			"additionalProperties": false
		},
		"SearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/ISearchClause"
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"SearchClauseType": {
			"enum": [
				"none",
				"tag",
				"all",
				"not",
				"folder",
				"revealQueryLanguage",
				"term",
				"numeric",
				"dateTime",
				"metadata",
				"has",
				"dupType",
				"concept",
				"advancedBoolean",
				"rqlList",
				"expansion",
				"time",
				"searchProfile",
				"termIn"
			],
			"type": "string"
		},
		"SearchCriteria": {
			"type": "object",
			"properties": {
				"getDocumentBodyTerms": {
					"type": "boolean"
				},
				"documentCriteria": {
					"$ref": "#/definitions/DocumentCriteria"
				},
				"aggregationCriteria": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AggregationCriteria"
					}
				},
				"documentFieldFillRateCriteria": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentFieldsFillRateCriteria"
					}
				},
				"dateHistogramCriteria": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DateHistogramCriteria"
					}
				},
				"numberHistogramCriteria": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NumberHistogramCriteria"
					}
				},
				"userId": {
					"format": "int32",
					"type": "integer"
				},
				"caseId": {
					"format": "int32",
					"type": "integer"
				},
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"SearchExpressionOperators": {
			"enum": [
				"EQUAL_TO",
				"NOT_EQUAL_TO",
				"GREATER_THAN",
				"GREATER_THAN_OR_EQUAL_TO",
				"LESS_THAN",
				"LESS_THAN_OR_EQUAL_TO",
				"CONTAINS",
				"DOES_NOT_CONTAIN",
				"RANGE",
				"IS_EMPTY",
				"IS_NOT_EMPTY",
				"IS_LIKE",
				"IS_NOT_LIKE",
				"HAS_ANY",
				"HAS_ALL",
				"HAS_NONE",
				"NOT_ALL",
				"UNKNOWN"
			],
			"type": "string"
		},
		"SearchFolderValidator": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"folderType": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SearchHistoryCreate": {
			"type": "object",
			"properties": {
				"queryString": {
					"type": "string"
				},
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"sortByString": {
					"type": "string"
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"SearchJob": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"historyId": {
					"format": "int64",
					"type": "integer"
				},
				"status": {
					"$ref": "#/definitions/JobStatus"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"submittedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"startedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"endDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"documentsFoundCount": {
					"format": "int64",
					"type": "integer"
				},
				"infoMessage": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"SearchJobQuery": {
			"type": "object",
			"properties": {
				"jobId": {
					"format": "int64",
					"type": "integer"
				},
				"metadataRequest": {
					"$ref": "#/definitions/SearchQueryMetadataRequest"
				}
			},
			"additionalProperties": false
		},
		"SearchJobResponse": {
			"type": "object",
			"properties": {
				"savedSearchId": {
					"format": "int64",
					"type": "integer"
				},
				"historyId": {
					"format": "int64",
					"type": "integer"
				},
				"searchJobSubmissionResponse": {
					"$ref": "#/definitions/CreateJobResponse"
				}
			},
			"additionalProperties": false
		},
		"SearchProfileSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"searchProfileIds": {
							"type": "array",
							"items": {
								"format": "int32",
								"type": "integer"
							}
						},
						"clause": {
							"$ref": "#/definitions/ISearchClause"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"SearchQueryMetadataRequest": {
			"type": "object",
			"properties": {
				"fieldProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"fields": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FieldBasic"
					}
				}
			},
			"additionalProperties": false
		},
		"SearchQueryType": {
			"enum": [
				"Rql",
				"Bql",
				"SearchId",
				"SearchJobId",
				"SavedSearchId"
			],
			"type": "string"
		},
		"SearchResults": {
			"type": "object",
			"properties": {
				"tracingId": {
					"type": "string"
				},
				"hasErrors": {
					"type": "boolean"
				},
				"documentBodyTerms": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"documentResults": {
					"$ref": "#/definitions/DocumentSearchResults"
				},
				"documentFieldFillRateResults": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DocumentFieldsFillRateResult"
					}
				},
				"aggregations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AggregationSearchResult"
					}
				},
				"dateHistograms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DateHistogramSearchResult"
					}
				},
				"numberHistograms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NumberHistogramSearchResult"
					}
				}
			},
			"additionalProperties": false
		},
		"SearchType": {
			"enum": [
				"GoToSearchSavedSearch",
				"SecuredSavedSearch",
				"SearchHistory",
				"EntityDomainFrom",
				"EntityDomainTo",
				"EntityMessageSender",
				"EntityMessageAddressee",
				"EntityDocumentAuthor",
				"EntityPerson",
				"EntityOrganization",
				"EntityPlace",
				"Website",
				"Assignment",
				"Undefined"
			],
			"type": "string"
		},
		"SecureDocumentsEntry": {
			"type": "object",
			"properties": {
				"teamIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"updateOption": {
					"$ref": "#/definitions/DocumentSecurityOption"
				}
			},
			"additionalProperties": false
		},
		"SimpleRqlSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"query": {
							"type": "string"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"SlipsheetProfileVariableCategory": {
			"enum": [
				"None",
				"UserText",
				"Tag",
				"Field"
			],
			"type": "string"
		},
		"SlipsheetVariables": {
			"type": "object",
			"properties": {
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"category": {
					"$ref": "#/definitions/SlipsheetProfileVariableCategory"
				},
				"value": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"StampingChoice": {
			"enum": [
				"NoStamping",
				"Stamping"
			],
			"type": "string"
		},
		"StampingSpec": {
			"type": "object",
			"properties": {
				"fontName": {
					"type": "string"
				},
				"fontStyle": {
					"$ref": "#/definitions/FontStyle"
				},
				"fontSize": {
					"format": "int32",
					"type": "integer"
				},
				"color": {
					"type": "string"
				},
				"removeExtraLineBreaks": {
					"type": "boolean"
				},
				"lineBreakValue": {
					"format": "int32",
					"type": "integer"
				},
				"ulStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				},
				"umStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				},
				"urStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				},
				"llStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				},
				"lmStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				},
				"lrStamp": {
					"$ref": "#/definitions/RegionStampSpec"
				}
			},
			"additionalProperties": false
		},
		"T": {
			"type": "object",
			"additionalProperties": false
		},
		"Tab": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Tag": {
			"type": "object",
			"properties": {
				"tagId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"isPrivileged": {
					"type": "boolean"
				},
				"isReviewed": {
					"type": "boolean"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"TagCountQuery": {
			"type": "object",
			"properties": {
				"queryType": {
					"$ref": "#/definitions/SearchQueryType"
				},
				"queryString": {
					"type": "string"
				},
				"sortByString": {
					"type": "string"
				},
				"tagSetId": {
					"format": "int32",
					"type": "integer"
				},
				"tagChoiceIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"ignoreDocumentSecurity": {
					"type": "boolean"
				},
				"searchProfileIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				},
				"totalCount": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"TagPaneGet": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"profileId": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"modifiedByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"modifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"tagPaneItems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TagPanelItemGet"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"TagPaneItemTypes": {
			"enum": [
				"Tag",
				"Field",
				"TagSet"
			],
			"type": "string"
		},
		"TagPanelItemGet": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"profileId": {
					"format": "int32",
					"type": "integer"
				},
				"paneId": {
					"format": "int32",
					"type": "integer"
				},
				"parentId": {
					"format": "int32",
					"type": "integer"
				},
				"level": {
					"format": "int32",
					"type": "integer"
				},
				"itemType": {
					"$ref": "#/definitions/TagPaneItemTypes"
				},
				"tagId": {
					"format": "int32",
					"type": "integer"
				},
				"tagName": {
					"type": "string"
				},
				"tagDescription": {
					"type": "string"
				},
				"tagSetId": {
					"format": "int32",
					"type": "integer"
				},
				"tagSetName": {
					"type": "string"
				},
				"tagSetDescription": {
					"type": "string"
				},
				"tagSetType": {
					"$ref": "#/definitions/TagSetTypes"
				},
				"recursive": {
					"type": "boolean"
				},
				"selectionRequired": {
					"type": "boolean"
				},
				"fieldName": {
					"type": "string"
				},
				"fieldLabel": {
					"type": "string"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"isReviewed": {
					"type": "boolean"
				},
				"isDefault": {
					"type": "boolean"
				},
				"fieldRequired": {
					"type": "boolean"
				},
				"isUpdatable": {
					"type": "boolean"
				},
				"fieldDataType": {
					"$ref": "#/definitions/FieldDataType"
				},
				"fieldDisplayName": {
					"type": "string"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"modifiedByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"modifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"TagProfile": {
			"type": "object",
			"properties": {
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"tagSets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TagSet"
					}
				}
			},
			"additionalProperties": false
		},
		"TagProfileCreateEdit": {
			"type": "object",
			"properties": {
				"tagProfileId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"acLs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccessControlTagProfile"
					}
				}
			},
			"additionalProperties": false
		},
		"TagProfileUserPermissionValitation": {
			"type": "object",
			"properties": {
				"assignedIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"validationType": {
					"$ref": "#/definitions/TagProfileValidationType"
				}
			},
			"additionalProperties": false
		},
		"TagProfileValidationType": {
			"enum": [
				"None",
				"ByUser",
				"ByTeam",
				"ByPool"
			],
			"type": "string"
		},
		"TagSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"tagId": {
							"format": "int32",
							"type": "integer"
						},
						"choiceId": {
							"format": "int32",
							"type": "integer"
						},
						"tagName": {
							"type": "string"
						},
						"choiceValue": {
							"type": "string"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"TagSet": {
			"type": "object",
			"properties": {
				"tagSetId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"format": "int32",
					"type": "integer"
				},
				"isRecursive": {
					"type": "boolean"
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Tag"
					}
				}
			},
			"additionalProperties": false
		},
		"TagSetTypes": {
			"enum": [
				"MultiSelect",
				"MutuallyExclusive",
				"Tree"
			],
			"type": "string"
		},
		"TagStatus": {
			"enum": [
				"None",
				"Pulling",
				"Failed",
				"Pushing"
			],
			"type": "string"
		},
		"TagSummaryTagChoice": {
			"type": "object",
			"properties": {
				"predictionScore": {
					"format": "int32",
					"type": "integer"
				},
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"Team": {
			"type": "object",
			"properties": {
				"teamId": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"userIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"TeamCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"userIds": {
					"type": "array",
					"items": {
						"format": "int32",
						"type": "integer"
					}
				}
			},
			"additionalProperties": false
		},
		"TermInSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"fieldName": {
							"type": "string"
						},
						"values": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"exact": {
							"type": "boolean"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"TermSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/SearchClause"
				},
				{
					"type": "object",
					"properties": {
						"term": {
							"type": "string"
						}
					}
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"TextSetDescriptor": {
			"enum": [
				"Text",
				"HTML",
				"AV_Transcribe",
				"Document_Metadata"
			],
			"type": "string"
		},
		"TimeSearchClause": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/RangeSearchClauseOfString"
				}
			],
			"additionalProperties": {
				"type": "object"
			},
			"discriminator": "type"
		},
		"TranscriptJobCreate": {
			"type": "object",
			"properties": {
				"filterOption": {
					"$ref": "#/definitions/TranscriptJobType"
				},
				"folderIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"name": {
					"type": "string"
				},
				"pagesToSkip": {
					"format": "int32",
					"type": "integer"
				},
				"pageNumberLocation": {
					"$ref": "#/definitions/TranscriptPageNumberLocation"
				},
				"pageNumberStartColumn": {
					"format": "int32",
					"type": "integer"
				},
				"lineNumberEndColumn": {
					"format": "int32",
					"type": "integer"
				},
				"spacesAfterLineNumber": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"TranscriptJobType": {
			"enum": [
				"All",
				"NewOnly",
				"NewAndErrors"
			],
			"type": "string"
		},
		"TranscriptPageNumberLocation": {
			"enum": [
				"Top",
				"Bottom"
			],
			"type": "string"
		},
		"TranslateJob": {
			"type": "object",
			"properties": {
				"isDeleted": {
					"type": "boolean"
				},
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"totalDocuments": {
					"format": "int32",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"languageSource": {
					"type": "string"
				},
				"languageDest": {
					"type": "string"
				},
				"textSetSourceId": {
					"format": "int32",
					"type": "integer"
				},
				"textSetDestId": {
					"format": "int32",
					"type": "integer"
				},
				"destLanguageFieldId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"TranslateJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				},
				"name": {
					"type": "string"
				},
				"languageSource": {
					"type": "string"
				},
				"languageDest": {
					"type": "string"
				},
				"textSetSourceId": {
					"format": "int32",
					"type": "integer"
				},
				"textSetDestId": {
					"format": "int32",
					"type": "integer"
				},
				"destLanguageFieldId": {
					"format": "int32",
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"UnassignmentJobCreate": {
			"type": "object",
			"properties": {
				"documentSelectionType": {
					"$ref": "#/definitions/DocumentSelection"
				},
				"selectedDocumentItemIds": {
					"type": "array",
					"items": {
						"format": "int64",
						"type": "integer"
					}
				},
				"unassignments": {
					"type": "object",
					"properties": {
						"AssignmentFolder": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Batch": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Custodian": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Job": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Review": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"additionalProperties": false
				},
				"searchJobId": {
					"format": "int64",
					"type": "integer"
				},
				"searchCriteria": {
					"$ref": "#/definitions/BulkActionSearchCriteria"
				}
			},
			"additionalProperties": false
		},
		"UpdateFieldEntry": {
			"type": "object",
			"properties": {
				"variableSets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FieldUpdateVariableSet"
					}
				},
				"updateOption": {
					"$ref": "#/definitions/BulkFieldUpdateOption"
				}
			},
			"additionalProperties": false
		},
		"UpdateNotesEntry": {
			"type": "object",
			"properties": {
				"notes": {
					"type": "string"
				},
				"updateOption": {
					"$ref": "#/definitions/BulkNotesUpdateOption"
				}
			},
			"additionalProperties": false
		},
		"UploadJobClientConfiguration": {
			"type": "object",
			"properties": {
				"clientManifestProperties": {
					"$ref": "#/definitions/ClientManifestProperties"
				},
				"s3ClientConfiguration": {
					"$ref": "#/definitions/S3ClientConfiguration"
				}
			},
			"additionalProperties": false
		},
		"UploadJobCreate": {
			"type": "object",
			"properties": {
				"jobGuid": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"custodian": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"manifest": {
					"$ref": "#/definitions/S3_Manifest"
				},
				"duplicateDocuments": {
					"type": "boolean"
				},
				"workFlow": {
					"$ref": "#/definitions/UploadJobWorkFlow"
				}
			},
			"additionalProperties": false
		},
		"UploadJobUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"custodian": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"manifest": {
					"$ref": "#/definitions/S3_Manifest"
				},
				"duplicateDocuments": {
					"type": "boolean"
				},
				"workFlow": {
					"$ref": "#/definitions/UploadJobWorkFlow"
				}
			},
			"additionalProperties": false
		},
		"UploadJobWorkFlow": {
			"enum": [
				"Review",
				"Eca"
			],
			"type": "string"
		},
		"User": {
			"type": "object",
			"properties": {
				"userName": {
					"type": "string"
				},
				"userId": {
					"format": "int64",
					"type": "integer"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"emailAddress": {
					"type": "string"
				},
				"groupId": {
					"format": "int32",
					"type": "integer"
				},
				"groupName": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"languageId": {
					"format": "int32",
					"type": "integer"
				},
				"languageCultureName": {
					"type": "string"
				},
				"companyId": {
					"format": "int32",
					"type": "integer"
				},
				"caseId": {
					"format": "int32",
					"type": "integer"
				},
				"password": {
					"type": "string"
				},
				"supportSiteLocation": {
					"type": "string"
				},
				"isCompanyAdmin": {
					"type": "boolean"
				},
				"userSettings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserSetting"
					}
				}
			},
			"additionalProperties": false
		},
		"UserSetting": {
			"type": "object",
			"properties": {
				"setting": {
					"$ref": "#/definitions/UserSettings"
				},
				"value": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"UserSettings": {
			"enum": [
				"None",
				"Enable_Location_Bookmarking",
				"Document_ViewType",
				"Force_Explict_Save",
				"Document_View",
				"Number_Of_Rows",
				"Redaction_Default_Text_Id",
				"Default_Document_View_Type",
				"Default_Grid_Column_Width",
				"Show_Thumbnail_Viewer",
				"Image_Conversion_Format",
				"Duplicate_Handling",
				"Family_Group_Handling",
				"Grid_Column_Widths_Review_Docs",
				"Near_Duplicate_Handling",
				"Near_Duplicates_Enabled",
				"Near_Duplicate_Detection_Type",
				"Max_Search_Results",
				"Default_Include_Duplicates",
				"Default_Include_Family_Members",
				"Review_Icon_Document_Type",
				"Review_Icon_Owner",
				"Review_Icon_Has_Tags",
				"Review_Icon_Has_Issues",
				"Review_Icon_Has_Annotations",
				"Review_Icon_Has_Notes",
				"Review_Icon_Has_Families",
				"Review_Icon_Has_Duplicates",
				"Clusters_Enabled",
				"Clusters_Status_To_Show",
				"Clusters_Document_Threshold",
				"Email_Threads_Enabled",
				"Review_Icon_Has_Near_Duplicates",
				"Review_Icon_Has_Email_Threads",
				"Review_Icon_Has_Alerts",
				"Default_Include_Near_Duplicates",
				"Default_Include_Email_Threads",
				"Default_Conflation_Setting",
				"Default_Document_View_Width_Type",
				"Last_Open_Assignment_Folder",
				"Review_Icon_Is_Reviewed",
				"Large_Document_Handling",
				"Large_Document_Html_Size",
				"Skip_Reviewed_Documents",
				"Enable_Main_Form_Entities",
				"Entities_Show_Unreviewed_Docs",
				"Document_Result_List_Chunk_Size",
				"Include_Related_Documents_In_Review_Screen",
				"Enforce_Required_Fields_For_Related_Documents",
				"Email_Thread_Handling",
				"Redaction_Display_Color",
				"Redaction_See_Through",
				"Review_Icon_Is_Locked",
				"Top_N_Entities",
				"Image_Folder_Segment_Size",
				"Show_Wordlist_Highlighting",
				"Enable_Image_Database_Lookup",
				"Text_Annotation_Default_Text",
				"Enable_General_Assignment_Pool",
				"Auto_Tag_Inlude_Standard_Tags",
				"Auto_Tag_Inlude_Folders",
				"Concept_Cluster_Type",
				"Auto_Select_Default_Document_Tags",
				"Default_Image_Set",
				"Index_Option_Log_All_Progress",
				"Index_Option_Add_Alerts_For_Unindexed_Docs",
				"Index_Option_Index_All_Docs_Plain_Text",
				"Index_Option_Index_Excel_As_Plain_Text_At_Size",
				"Index_Option_Significant_Chars",
				"Index_Option_Insignificant_Chars",
				"Index_Option_Index_MSWord_As_Plain_Text_At_Size",
				"Index_Option_Index_MSPP_As_Plain_Text_At_Size",
				"Index_Option_Index_AdobePDF_As_Plain_Text_At_Size",
				"Recursive_Document_Folders",
				"Private_Notes_Allowed",
				"Multi_Value_Indexing",
				"Cache_Text_Search_Results",
				"Auto_Run_Search_Results",
				"Selected_Tag_Profile",
				"Row_Number_On",
				"Review_DockControls",
				"Review_DockControlsBulkTag",
				"Show_Tag_Description_ToolTips",
				"Hide_Duplicate_Searches_In_History",
				"Review_ControlsPanes",
				"PopOut_Review_Window",
				"Redaction_Profile",
				"Index_Option_MSWord_Max_Size_To_Index",
				"Index_Option_Excel_Max_Size_To_Index",
				"Index_Option_MSPP_Max_Size_To_Index",
				"Index_Option_PDF_Max_Size_To_Index",
				"Index_Option_Other_Max_Size_To_Index",
				"Index_Option_Other_FileTypes_To_Limit_Text",
				"Current_Field_Profile",
				"Number_Of_Tree_Rows",
				"Production_ErrorReportGrid",
				"Production_ExportErrorReportGrid",
				"Transcript_ErrorReportGrid",
				"Review_Controls",
				"Transcripts_Show_Page_Breaks",
				"Show_Vertical_Grid_Lines",
				"Show_Alternating_Row_Color",
				"Index_Skip_Failed_Documents",
				"Index_Use_HD_Html_Mode",
				"Index_Html_Remove_Metadata",
				"Index_Analyzer",
				"PreProduction_SummaryReportGrid",
				"BulkTag_ControlsPanes",
				"BulkTag_WindowState",
				"Enable_NexLP_Tab",
				"NexLP_Tab_URL",
				"Elastic_Search_Query_Syntax",
				"Random_Sample_Default_Confidence",
				"Random_Samping_Default_Margin_Of_Error",
				"DefaultTextSet",
				"TextSetDisplayOrder",
				"SuppressNotifications",
				"FoldersDefaultReadOnly",
				"DocumentTextSets",
				"Index_ErrorReportGrid",
				"Index_SummaryReportGrid",
				"BulkOCR_ErrorReportGrid",
				"Index_Option_DetectColor",
				"Hide_WordlistHitArrows",
				"Review_Dark_Mode",
				"FoldersTreeExpandCountMax",
				"MetadataSearchProfiles",
				"Heat_Map_Configuration",
				"MainForm_Left_Pane_Width",
				"Show_Shortcut_Dock",
				"ImageSetDisplayOrder",
				"ManageBatchesDropdownSelected",
				"EnableDocumentLevelSecurityForAdmin",
				"Review_Language",
				"Large_Document_Handling_TextSet",
				"Coding_Panel_Buttons_Location",
				"SuppressHiddenContentNotifications",
				"UpdateCountOnSearch",
				"DisplayDateTimeByRegionalFormat",
				"MainForm_Right_Pane_Width",
				"Localize_DateTimes_In_Documents_Grid",
				"ComGraphSettings",
				"Reuse_Review_Window",
				"TimelineWidgetSettings",
				"AssignmentBatchTemplates",
				"WidgetDisplaySettings"
			],
			"type": "string"
		},
		"UserSettingsForm": {
			"type": "object",
			"properties": {
				"categories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Category"
					}
				},
				"elements": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Element"
					}
				}
			},
			"additionalProperties": false
		},
		"UserWithTeamQuery": {
			"type": "object",
			"properties": {
				"query": {
					"type": "string"
				},
				"operator": {
					"$ref": "#/definitions/SearchExpressionOperators"
				},
				"filterType": {
					"$ref": "#/definitions/UserWithTeamQueryType"
				}
			},
			"additionalProperties": false
		},
		"UserWithTeamQueryType": {
			"enum": [
				"User",
				"Team"
			],
			"type": "string"
		},
		"UserWithTeams": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int64",
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"teams": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"ValidationResult": {
			"type": "object",
			"properties": {
				"error": {
					"type": "string"
				},
				"rqlExpression": {
					"type": "string"
				},
				"valid": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"WorkFolder": {
			"type": "object",
			"properties": {
				"parentFolderId": {
					"format": "int64",
					"type": "integer"
				},
				"displayOrder": {
					"format": "int32",
					"type": "integer"
				},
				"folderType": {
					"$ref": "#/definitions/FolderItemType"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"canSelectFolder": {
					"type": "boolean"
				},
				"uniqueId": {
					"type": "string"
				},
				"uniqueParentId": {
					"type": "string"
				},
				"readOnly": {
					"type": "boolean"
				},
				"createdByUserId": {
					"format": "int32",
					"type": "integer"
				},
				"hasChildren": {
					"type": "boolean"
				},
				"hasItemChildren": {
					"type": "boolean"
				},
				"documentCount": {
					"format": "int64",
					"type": "integer"
				},
				"folderActionPermissions": {
					"$ref": "#/definitions/ActionPermissions"
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FolderItem"
					}
				},
				"folderQuery": {
					"$ref": "#/definitions/FolderItemQuery"
				},
				"isSearchable": {
					"type": "boolean"
				},
				"isUserFolder": {
					"type": "boolean"
				},
				"searchType": {
					"$ref": "#/definitions/FolderSearchType"
				}
			},
			"additionalProperties": false
		},
		"WorkFolderCreate": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"acLs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AccessControlWorkFolder"
					}
				}
			},
			"additionalProperties": false
		}
	},
	"securityDefinitions": {
		"api-token": {
			"type": "apiKey",
			"name": "InControlAuthToken",
			"in": "header",
			"description": "API Session Token"
		}
	},
	"security": [
		{
			"api-token": []
		}
	]
}